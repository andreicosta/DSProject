/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import dsproject.Student;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author pazuti
 */
public class TestPanel extends javax.swing.JPanel
{

    /**
     * Creates new form TestPanel
     */
    public TestPanel()
    {
        try
        {
            UIManager.setLookAndFeel("javax.swing.plaf.nimbus.NimbusLookAndFeel");
        }
        catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
            Logger.getLogger(TestPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents()
   {

      chairButtonGroup = new javax.swing.ButtonGroup();
      runningButtonGroup = new javax.swing.ButtonGroup();
      jTabbedPane1 = new javax.swing.JTabbedPane();
      newEditPanel = new javax.swing.JPanel();
      comboBoxClass = new javax.swing.JComboBox();
      comboBoxStudentName = new javax.swing.JComboBox();
      labelClass = new javax.swing.JLabel();
      labelStudentName = new javax.swing.JLabel();
      jSeparator1 = new javax.swing.JSeparator();
      labelTestDate = new javax.swing.JLabel();
      fieldTestDate = new com.toedter.calendar.JDateChooser();
      jSeparator2 = new javax.swing.JSeparator();
      jLabel4 = new javax.swing.JLabel();
      jLabel5 = new javax.swing.JLabel();
      jSeparator3 = new javax.swing.JSeparator();
      labelTemperature = new javax.swing.JLabel();
      fieldTemperature = new javax.swing.JTextField();
      jLabel7 = new javax.swing.JLabel();
      labelBodyMass = new javax.swing.JLabel();
      labelHeight = new javax.swing.JLabel();
      labelSpread = new javax.swing.JLabel();
      labelSitAndAchieve = new javax.swing.JLabel();
      fieldSitAndAchieve = new javax.swing.JTextField();
      fieldSpread = new javax.swing.JTextField();
      fieldHeight = new javax.swing.JTextField();
      fieldBodyMass = new javax.swing.JTextField();
      radioSitAndAchieveWithSeat = new javax.swing.JRadioButton();
      radioSitAndAchieveWithoutSeat = new javax.swing.JRadioButton();
      labelSitUp = new javax.swing.JLabel();
      fieldSitUp = new javax.swing.JTextField();
      labelRun = new javax.swing.JLabel();
      fieldRun = new javax.swing.JTextField();
      radio6Minutes = new javax.swing.JRadioButton();
      radio9Minutes = new javax.swing.JRadioButton();
      jLabel14 = new javax.swing.JLabel();
      jLabel15 = new javax.swing.JLabel();
      jLabel16 = new javax.swing.JLabel();
      jLabel17 = new javax.swing.JLabel();
      jLabel18 = new javax.swing.JLabel();
      jLabel19 = new javax.swing.JLabel();
      labelHorizontalJump = new javax.swing.JLabel();
      labelThrowOfMedicineBall = new javax.swing.JLabel();
      labelSquareTest = new javax.swing.JLabel();
      label20MetersRun = new javax.swing.JLabel();
      field20MetersRun = new javax.swing.JTextField();
      fiedlSquareTest = new javax.swing.JTextField();
      fieldHorizontalJump = new javax.swing.JTextField();
      fieldThrowOfMedicineBall = new javax.swing.JTextField();
      jLabel24 = new javax.swing.JLabel();
      jLabel25 = new javax.swing.JLabel();
      jLabel26 = new javax.swing.JLabel();
      jLabel27 = new javax.swing.JLabel();
      buttonSave = new javax.swing.JButton();
      labelTime = new javax.swing.JLabel();
      fieldTime = new javax.swing.JTextField();
      labelIMC = new javax.swing.JLabel();
      fieldIMC = new javax.swing.JTextField();
      controlPanel = new javax.swing.JPanel();
      jScrollPane1 = new javax.swing.JScrollPane();
      jTable1 = new javax.swing.JTable();
      loadPanel = new javax.swing.JPanel();
      jLabel28 = new javax.swing.JLabel();
      jComboBox1 = new javax.swing.JComboBox();
      jScrollPane2 = new javax.swing.JScrollPane();
      jTable2 = new javax.swing.JTable();

      chairButtonGroup.add(radioSitAndAchieveWithSeat);
      chairButtonGroup.add(radioSitAndAchieveWithoutSeat);

      runningButtonGroup.add(radio6Minutes);
      runningButtonGroup.add(radio9Minutes);

      setPreferredSize(new java.awt.Dimension(700, 515));

      labelClass.setText("Turma");

      labelStudentName.setText("Nome do Aluno");

      labelTestDate.setText("Data da Avaliação");

      jLabel4.setText("Saúde");

      jLabel5.setText("Desempenho Motor");

      labelTemperature.setText("Temperatura");

      fieldTemperature.addKeyListener(new java.awt.event.KeyAdapter()
      {
         public void keyTyped(java.awt.event.KeyEvent evt)
         {
            fieldTemperatureKeyTyped(evt);
         }
      });

      jLabel7.setText("ºC");

      labelBodyMass.setText("Massa Corporal");

      labelHeight.setText("Estatura");

      labelSpread.setText("Envergadura");

      labelSitAndAchieve.setText("Sentar-e-Alcançar");

      fieldSpread.addKeyListener(new java.awt.event.KeyAdapter()
      {
         public void keyTyped(java.awt.event.KeyEvent evt)
         {
            fieldSpreadKeyTyped(evt);
         }
      });

      fieldHeight.addKeyListener(new java.awt.event.KeyAdapter()
      {
         public void keyTyped(java.awt.event.KeyEvent evt)
         {
            fieldHeightKeyTyped(evt);
         }
      });

      fieldBodyMass.addKeyListener(new java.awt.event.KeyAdapter()
      {
         public void keyTyped(java.awt.event.KeyEvent evt)
         {
            fieldBodyMassKeyTyped(evt);
         }
      });

      radioSitAndAchieveWithSeat.setText("Com Banco");
      radioSitAndAchieveWithSeat.setSelected(true);

      radioSitAndAchieveWithoutSeat.setText("Sem Banco");

      labelSitUp.setText("Abdominal");

      fieldSitUp.addKeyListener(new java.awt.event.KeyAdapter()
      {
         public void keyTyped(java.awt.event.KeyEvent evt)
         {
            fieldSitUpKeyTyped(evt);
         }
      });

      labelRun.setText("Corrida");

      radio6Minutes.setText("6 minutos");
      radio6Minutes.setSelected(true);

      radio9Minutes.setText("9 minutos");

      jLabel14.setText("Kg");

      jLabel15.setText("cm");

      jLabel16.setText("cm");

      jLabel17.setText("qtde");

      jLabel18.setText("cm");

      jLabel19.setText("m");

      labelHorizontalJump.setText("Salto Horizontal");

      labelThrowOfMedicineBall.setText("Arremesso de Medicineball");

      labelSquareTest.setText("Quadrado");

      label20MetersRun.setText("Corrida de 20 metros");

      jLabel24.setText("cm");

      jLabel25.setText("cm");

      jLabel26.setText("s");

      jLabel27.setText("s");

      buttonSave.setText("Salvar");
      buttonSave.setPreferredSize(new java.awt.Dimension(80, 29));
      buttonSave.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            buttonSaveActionPerformed(evt);
         }
      });

      labelTime.setText("Horário");

      fieldTime.addKeyListener(new java.awt.event.KeyAdapter()
      {
         public void keyTyped(java.awt.event.KeyEvent evt)
         {
            fieldTimeKeyTyped(evt);
         }
      });

      labelIMC.setText("IMC");

      fieldIMC.addKeyListener(new java.awt.event.KeyAdapter()
      {
         public void keyTyped(java.awt.event.KeyEvent evt)
         {
            fieldIMCKeyTyped(evt);
         }
      });

      javax.swing.GroupLayout newEditPanelLayout = new javax.swing.GroupLayout(newEditPanel);
      newEditPanel.setLayout(newEditPanelLayout);
      newEditPanelLayout.setHorizontalGroup(
         newEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addComponent(jSeparator1)
         .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.TRAILING)
         .addComponent(jSeparator2)
         .addGroup(newEditPanelLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(newEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(newEditPanelLayout.createSequentialGroup()
                  .addGroup(newEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addComponent(labelThrowOfMedicineBall)
                     .addComponent(labelHorizontalJump))
                  .addGap(18, 18, 18)
                  .addGroup(newEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                     .addComponent(fieldThrowOfMedicineBall, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                     .addComponent(fieldHorizontalJump))
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addGroup(newEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addComponent(jLabel24)
                     .addComponent(jLabel25))
                  .addGap(93, 93, 93)
                  .addGroup(newEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addComponent(label20MetersRun)
                     .addComponent(labelSquareTest))
                  .addGap(18, 18, 18)
                  .addGroup(newEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                     .addComponent(field20MetersRun, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                     .addComponent(fiedlSquareTest))
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addGroup(newEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addComponent(jLabel26)
                     .addComponent(jLabel27)))
               .addGroup(newEditPanelLayout.createSequentialGroup()
                  .addGroup(newEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addGroup(newEditPanelLayout.createSequentialGroup()
                        .addComponent(labelClass)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboBoxClass, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(labelStudentName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboBoxStudentName, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                     .addGroup(newEditPanelLayout.createSequentialGroup()
                        .addComponent(labelTestDate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fieldTestDate, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58)
                        .addComponent(labelTime)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fieldTime, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                        .addComponent(labelTemperature)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fieldTemperature, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)))
                  .addContainerGap())
               .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newEditPanelLayout.createSequentialGroup()
                  .addGap(0, 436, Short.MAX_VALUE)
                  .addGroup(newEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newEditPanelLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(310, 310, 310))
                     .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newEditPanelLayout.createSequentialGroup()
                        .addComponent(buttonSave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
               .addGroup(newEditPanelLayout.createSequentialGroup()
                  .addGroup(newEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                     .addGroup(newEditPanelLayout.createSequentialGroup()
                        .addGroup(newEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                           .addComponent(labelHeight)
                           .addComponent(labelBodyMass)
                           .addComponent(labelIMC))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                     .addGroup(newEditPanelLayout.createSequentialGroup()
                        .addComponent(labelSpread, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(30, 30, 30)))
                  .addGroup(newEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                     .addComponent(fieldSpread)
                     .addComponent(fieldIMC, javax.swing.GroupLayout.Alignment.LEADING)
                     .addComponent(fieldHeight, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                     .addComponent(fieldBodyMass, javax.swing.GroupLayout.Alignment.LEADING))
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addGroup(newEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addGroup(newEditPanelLayout.createSequentialGroup()
                        .addGroup(newEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                           .addComponent(jLabel14)
                           .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(newEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                           .addGroup(newEditPanelLayout.createSequentialGroup()
                              .addGroup(newEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                 .addComponent(labelSitAndAchieve)
                                 .addComponent(labelRun))
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                              .addGroup(newEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                 .addComponent(fieldSitAndAchieve, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                                 .addComponent(fieldSitUp, javax.swing.GroupLayout.Alignment.LEADING)
                                 .addComponent(fieldRun)))
                           .addComponent(labelSitUp)
                           .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(newEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                           .addComponent(jLabel17)
                           .addGroup(newEditPanelLayout.createSequentialGroup()
                              .addGroup(newEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                 .addComponent(jLabel18)
                                 .addComponent(jLabel19))
                              .addGap(18, 18, 18)
                              .addGroup(newEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                 .addComponent(radio6Minutes)
                                 .addComponent(radioSitAndAchieveWithSeat))
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                              .addGroup(newEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                 .addComponent(radio9Minutes)
                                 .addComponent(radioSitAndAchieveWithoutSeat)))))
                     .addGroup(newEditPanelLayout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addGap(0, 0, Short.MAX_VALUE))))))
      );
      newEditPanelLayout.setVerticalGroup(
         newEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(newEditPanelLayout.createSequentialGroup()
            .addGap(18, 18, 18)
            .addGroup(newEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
               .addGroup(newEditPanelLayout.createSequentialGroup()
                  .addGroup(newEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                     .addComponent(comboBoxClass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                     .addComponent(labelClass)
                     .addComponent(comboBoxStudentName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                     .addComponent(labelStudentName))
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                  .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addGroup(newEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                     .addComponent(labelTestDate)
                     .addComponent(fieldTestDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                     .addGroup(javax.swing.GroupLayout.Alignment.LEADING, newEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(fieldTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labelTime))))
               .addGroup(newEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                  .addComponent(labelTemperature)
                  .addComponent(fieldTemperature, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addComponent(jLabel7)))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jLabel4)
            .addGap(1, 1, 1)
            .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(newEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(labelBodyMass)
               .addComponent(fieldBodyMass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(labelSitUp)
               .addComponent(fieldSitUp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(jLabel14)
               .addComponent(jLabel17))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(newEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(labelHeight)
               .addComponent(fieldHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(labelSitAndAchieve)
               .addComponent(fieldSitAndAchieve, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(radioSitAndAchieveWithSeat)
               .addComponent(radioSitAndAchieveWithoutSeat)
               .addComponent(jLabel15)
               .addComponent(jLabel18))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(newEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(labelRun)
               .addComponent(fieldRun, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(radio9Minutes)
               .addComponent(radio6Minutes)
               .addComponent(jLabel19)
               .addComponent(labelIMC)
               .addComponent(fieldIMC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(newEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(labelSpread)
               .addComponent(fieldSpread, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(jLabel16))
            .addGap(20, 20, 20)
            .addComponent(jLabel5)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(newEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(labelHorizontalJump)
               .addComponent(labelSquareTest)
               .addComponent(fiedlSquareTest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(fieldHorizontalJump, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(jLabel24)
               .addComponent(jLabel26))
            .addGap(18, 18, 18)
            .addGroup(newEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(labelThrowOfMedicineBall)
               .addComponent(label20MetersRun)
               .addComponent(field20MetersRun, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(fieldThrowOfMedicineBall, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(jLabel25)
               .addComponent(jLabel27))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
            .addComponent(buttonSave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap())
      );

      jTabbedPane1.addTab("Nova Avaliação / Editar Avaliação", newEditPanel);

      jTable1.setModel(new javax.swing.table.DefaultTableModel(
         new Object [][]
         {
            {null, null, null},
            {null, null, null},
            {null, null, null},
            {null, null, null},
            {null, null, null},
            {null, null, null},
            {null, null, null},
            {null, null, null},
            {null, null, null},
            {null, null, null},
            {null, null, null},
            {null, null, null},
            {null, null, null},
            {null, null, null},
            {null, null, null},
            {null, null, null},
            {null, null, null},
            {null, null, null},
            {null, null, null},
            {null, null, null},
            {null, null, null},
            {null, null, null},
            {null, null, null},
            {null, null, null},
            {null, null, null}
         },
         new String []
         {
            "Turma", "Dia da Avaliação", "Status"
         }
      ));
      jScrollPane1.setViewportView(jTable1);
      jTable1.getColumnModel().getColumn(0).setResizable(false);
      jTable1.getColumnModel().getColumn(1).setResizable(false);
      jTable1.getColumnModel().getColumn(2).setResizable(false);

      javax.swing.GroupLayout controlPanelLayout = new javax.swing.GroupLayout(controlPanel);
      controlPanel.setLayout(controlPanelLayout);
      controlPanelLayout.setHorizontalGroup(
         controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, controlPanelLayout.createSequentialGroup()
            .addContainerGap(52, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 710, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(39, 39, 39))
      );
      controlPanelLayout.setVerticalGroup(
         controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(controlPanelLayout.createSequentialGroup()
            .addGap(25, 25, 25)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(14, Short.MAX_VALUE))
      );

      jTabbedPane1.addTab("Controle de Avaliações", controlPanel);

      jLabel28.setText("Turma");

      jTable2.setModel(new javax.swing.table.DefaultTableModel(
         new Object [][]
         {
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null},
            {null, null}
         },
         new String []
         {
            "Aluno", "Status da Avaliação"
         }
      ));
      jScrollPane2.setViewportView(jTable2);

      javax.swing.GroupLayout loadPanelLayout = new javax.swing.GroupLayout(loadPanel);
      loadPanel.setLayout(loadPanelLayout);
      loadPanelLayout.setHorizontalGroup(
         loadPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(loadPanelLayout.createSequentialGroup()
            .addGroup(loadPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(loadPanelLayout.createSequentialGroup()
                  .addContainerGap()
                  .addComponent(jLabel28)
                  .addGap(34, 34, 34)
                  .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
               .addGroup(loadPanelLayout.createSequentialGroup()
                  .addGap(20, 20, 20)
                  .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 727, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addContainerGap(54, Short.MAX_VALUE))
      );
      loadPanelLayout.setVerticalGroup(
         loadPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(loadPanelLayout.createSequentialGroup()
            .addGap(31, 31, 31)
            .addGroup(loadPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(jLabel28)
               .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(37, 37, 37)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(24, Short.MAX_VALUE))
      );

      jTabbedPane1.addTab("Carregar Avaliação", loadPanel);

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
      this.setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 809, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap())
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jTabbedPane1))
      );
   }// </editor-fold>//GEN-END:initComponents

   private void buttonSaveActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_buttonSaveActionPerformed
   {//GEN-HEADEREND:event_buttonSaveActionPerformed
      java.util.Date dateOfBirth;
      java.util.Date testDate;
      java.util.Date time = null;
      java.sql.Date sqlDateOfBirth = null;
      java.sql.Date sqlTestDate = null;
      String timeOfTest = null;
      String temperature;
      String birthday = "13/04/1999"; //aqui vai Student.getDateOfBirth()
      SimpleDateFormat sd = new SimpleDateFormat("dd/MM/yyyy");
      SimpleDateFormat sh = new SimpleDateFormat("HH:mm");
      
      ArrayList<Student> students = new ArrayList<>();
      ObjectInputStream in = null;
      ObjectOutputStream out = null;
      
      //daqui até o catch le um objeto gravado no arquivo alunos.txt
      File fileStudents = new File("alunos.txt");
      if(fileStudents.exists())
      {
         FileInputStream file;
         try
         {
            file = new FileInputStream(fileStudents);
            in = new ObjectInputStream(file);
            students = (ArrayList<Student>)in.readObject();
            System.out.println(students.get(0).getName());
            System.out.println(students.get(1).getName());
            in.close();
            file.close();
         }
         catch (IOException | ClassNotFoundException ex)
         {
            System.err.println(ex);
         }
      }
      
      //imprime objeto lido do arquivo alunos.txt
      
      /*System.out.println(studentRead.getDateOfBirth());
      System.out.println(studentRead.getAddress());
      System.out.println(studentRead.getGender());
      System.out.println(studentRead.getCity());
      System.out.println(studentRead.getState());
      System.out.println(studentRead.getNomeDoPai());
      System.out.println(studentRead.getNomeDaMae());*/

      try
      {
         testDate = getFieldTestDate();
         timeOfTest = getFieldTime();
         temperature = getFieldTemperature();
         
         if(testDate != null && timeOfTest != null && temperature != null)
         {
            //testa se foi digitado uma hora mais : mais minutos
            if(timeOfTest.length() != 5)
            {
               JOptionPane.showMessageDialog(null, "Digite um horario correto", "Erro", JOptionPane.ERROR_MESSAGE);
            }
            else
            {
               //pega o que esta antes e depois dos dois pontos e põe no vetor horarioDividido
               String splitedTime[] = timeOfTest.split(":");
               //testa se a hora é maior que 23
               if(Integer.parseInt(splitedTime[0]) > 23)
               {
                  JOptionPane.showMessageDialog(null, "Digite uma hora no formato 24h", "Erro", JOptionPane.ERROR_MESSAGE);
               }
               else
               {
                  //testa se os minutos são maiores que 59
                  if(Integer.parseInt(splitedTime[1]) > 59)
                  {
                     JOptionPane.showMessageDialog(null, "Digite os minutos corretamente", "Erro", JOptionPane.ERROR_MESSAGE);
                  }
                  else
                  {
                     //converte uma data escrita no formato de string para o formato de data do java
                     dateOfBirth = sd.parse(birthday);

                     //converte a data em formato do java para o formato do mysql
                     sqlTestDate = new java.sql.Date(testDate.getTime());
                     sqlDateOfBirth = new java.sql.Date(dateOfBirth.getTime());

                     time = sh.parse(timeOfTest);

                     dsproject.Student student = new dsproject.Student("Maria", "Joao", "Miguel", sqlDateOfBirth, "sdfgdfsg", "Masculino", "Pelotas", "RS");
                     if(student.saveTest(sqlTestDate, timeOfTest, temperature))
                     {
                        // daqui até o catch salva objeto aluno
                        try
                        {
                           //fileStudents = new File("alunos.txt");
                           if(fileStudents.exists())
                           {
                              FileInputStream file = new FileInputStream(fileStudents);
                              in = new ObjectInputStream(file);
                              students = (ArrayList<Student>)in.readObject();
                              students.add(student);
                              out = new ObjectOutputStream(new FileOutputStream("alunos.txt"));
                              out.writeObject(students);
                              out.close();
                              JOptionPane.showMessageDialog(null, "Avaliação salva", "Confirmação!", JOptionPane.INFORMATION_MESSAGE);
                           }
                           else
                           {
                              students.add(student);
                              out = new ObjectOutputStream(new FileOutputStream("alunos.txt"));
                              out.writeObject(students);
                              out.close();
                              JOptionPane.showMessageDialog(null, "Avaliação salva com sucesso", "Confirmação!", JOptionPane.INFORMATION_MESSAGE);
                           }
                        }
                        catch (IOException | ClassNotFoundException ex)
                        {
                           System.err.println(ex);
                        }
                        //System.out.println(sh.format(hora));
                        //System.out.println(sd.format(dataAvaliacao));
                     }
                  }
               }
            }
         }
      }
      catch (ParseException | NullPointerException ex)
      {
	 System.err.println(ex);
      }
   }//GEN-LAST:event_buttonSaveActionPerformed

   private void fieldTimeKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_fieldTimeKeyTyped
   {//GEN-HEADEREND:event_fieldTimeKeyTyped
      if(!Character.isDigit(evt.getKeyChar()))
      {
         evt.setKeyChar('\0');
      }
      else
      {
         String textoCampo = fieldTime.getText();
         if(textoCampo.length() == 2)
            fieldTime.setText(textoCampo + ":");
         else
         {
            if(textoCampo.length() > 4)
               evt.setKeyChar('\0');
         }
      }
   }//GEN-LAST:event_fieldTimeKeyTyped

   private void fieldTemperatureKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_fieldTemperatureKeyTyped
   {//GEN-HEADEREND:event_fieldTemperatureKeyTyped
      if(!Character.isDigit(evt.getKeyChar()))
      {
         evt.setKeyChar('\0');
      }
      else
      {
         String textoCampo = fieldTemperature.getText();
         if(textoCampo.length() > 1)
            evt.setKeyChar('\0');
      }
   }//GEN-LAST:event_fieldTemperatureKeyTyped

   private void fieldBodyMassKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_fieldBodyMassKeyTyped
   {//GEN-HEADEREND:event_fieldBodyMassKeyTyped
      if(!Character.isDigit(evt.getKeyChar()))
      {
         evt.setKeyChar('\0');
      }
      else
      {
         String textoCampo = fieldBodyMass.getText();
         if(textoCampo.length() > 2)
            evt.setKeyChar('\0');
      }
   }//GEN-LAST:event_fieldBodyMassKeyTyped

   private void fieldHeightKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_fieldHeightKeyTyped
   {//GEN-HEADEREND:event_fieldHeightKeyTyped
      if(!Character.isDigit(evt.getKeyChar()))
      {
         evt.setKeyChar('\0');
      }
      else
      {
         String textoCampo = fieldHeight.getText();
         if(textoCampo.length() > 2)
            evt.setKeyChar('\0');
      }
   }//GEN-LAST:event_fieldHeightKeyTyped

   private void fieldIMCKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_fieldIMCKeyTyped
   {//GEN-HEADEREND:event_fieldIMCKeyTyped
      if(!Character.isDigit(evt.getKeyChar()))
      {
         evt.setKeyChar('\0');
      }
      else
      {
         String textoCampo = fieldIMC.getText();
         //System.out.println("length sem ponto = " + campoIMC.getText().length());
         if(textoCampo.length() == 2)
         {
            fieldIMC.setText(textoCampo + ".");
            //System.out.println("ponto colocado length = " + campoIMC.getText().length());
         }
         else
         {
            if(textoCampo.length() > 3)
               evt.setKeyChar('\0');
         }
      }
   }//GEN-LAST:event_fieldIMCKeyTyped

   private void fieldSpreadKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_fieldSpreadKeyTyped
   {//GEN-HEADEREND:event_fieldSpreadKeyTyped
      if(!Character.isDigit(evt.getKeyChar()))
      {
         evt.setKeyChar('\0');
      }
      else
      {
         String textoCampo = fieldSpread.getText();
         if(textoCampo.length() > 2)
            evt.setKeyChar('\0');
      }
   }//GEN-LAST:event_fieldSpreadKeyTyped

   private void fieldSitUpKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_fieldSitUpKeyTyped
   {//GEN-HEADEREND:event_fieldSitUpKeyTyped
      if(!Character.isDigit(evt.getKeyChar()))
      {
         evt.setKeyChar('\0');
      }
      else
      {
         String textoCampo = fieldSitUp.getText();
         if(textoCampo.length() > 2)
            evt.setKeyChar('\0');
      }
   }//GEN-LAST:event_fieldSitUpKeyTyped

   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JButton buttonSave;
   private javax.swing.ButtonGroup chairButtonGroup;
   private javax.swing.JComboBox comboBoxClass;
   private javax.swing.JComboBox comboBoxStudentName;
   private javax.swing.JPanel controlPanel;
   private static javax.swing.JTextField fiedlSquareTest;
   private static javax.swing.JTextField field20MetersRun;
   private static javax.swing.JTextField fieldBodyMass;
   private static javax.swing.JTextField fieldHeight;
   private static javax.swing.JTextField fieldHorizontalJump;
   private static javax.swing.JTextField fieldIMC;
   private static javax.swing.JTextField fieldRun;
   private static javax.swing.JTextField fieldSitAndAchieve;
   private static javax.swing.JTextField fieldSitUp;
   private static javax.swing.JTextField fieldSpread;
   private static javax.swing.JTextField fieldTemperature;
   private static com.toedter.calendar.JDateChooser fieldTestDate;
   private static javax.swing.JTextField fieldThrowOfMedicineBall;
   private static javax.swing.JTextField fieldTime;
   private javax.swing.JComboBox jComboBox1;
   private javax.swing.JLabel jLabel14;
   private javax.swing.JLabel jLabel15;
   private javax.swing.JLabel jLabel16;
   private javax.swing.JLabel jLabel17;
   private javax.swing.JLabel jLabel18;
   private javax.swing.JLabel jLabel19;
   private javax.swing.JLabel jLabel24;
   private javax.swing.JLabel jLabel25;
   private javax.swing.JLabel jLabel26;
   private javax.swing.JLabel jLabel27;
   private javax.swing.JLabel jLabel28;
   private javax.swing.JLabel jLabel4;
   private javax.swing.JLabel jLabel5;
   private javax.swing.JLabel jLabel7;
   private javax.swing.JScrollPane jScrollPane1;
   private javax.swing.JScrollPane jScrollPane2;
   private javax.swing.JSeparator jSeparator1;
   private javax.swing.JSeparator jSeparator2;
   private javax.swing.JSeparator jSeparator3;
   private javax.swing.JTabbedPane jTabbedPane1;
   private javax.swing.JTable jTable1;
   private javax.swing.JTable jTable2;
   private static javax.swing.JLabel label20MetersRun;
   private static javax.swing.JLabel labelBodyMass;
   private javax.swing.JLabel labelClass;
   private static javax.swing.JLabel labelHeight;
   private static javax.swing.JLabel labelHorizontalJump;
   private static javax.swing.JLabel labelIMC;
   private static javax.swing.JLabel labelRun;
   private static javax.swing.JLabel labelSitAndAchieve;
   private static javax.swing.JLabel labelSitUp;
   private static javax.swing.JLabel labelSpread;
   private static javax.swing.JLabel labelSquareTest;
   private javax.swing.JLabel labelStudentName;
   private static javax.swing.JLabel labelTemperature;
   private static javax.swing.JLabel labelTestDate;
   private static javax.swing.JLabel labelThrowOfMedicineBall;
   private static javax.swing.JLabel labelTime;
   private javax.swing.JPanel loadPanel;
   private javax.swing.JPanel newEditPanel;
   private static javax.swing.JRadioButton radio6Minutes;
   private static javax.swing.JRadioButton radio9Minutes;
   private static javax.swing.JRadioButton radioSitAndAchieveWithSeat;
   private static javax.swing.JRadioButton radioSitAndAchieveWithoutSeat;
   private javax.swing.ButtonGroup runningButtonGroup;
   // End of variables declaration//GEN-END:variables

   public static Date getFieldTestDate()
   {
      if(fieldTestDate.getDate() == null)
      {
         JOptionPane.showMessageDialog(null, "Escolha uma " + labelTestDate.getText(), "Erro", JOptionPane.ERROR_MESSAGE);
         return null;
      }
      else
      {
         return fieldTestDate.getDate();
      }
   }

   public static String getFieldTime()
   {
      if(fieldTime.getText().isEmpty())
      {
         JOptionPane.showMessageDialog(null, "Digite um " + labelTime.getText(), "Erro", JOptionPane.ERROR_MESSAGE);
         return null;
      }
      else
      {
         return fieldTime.getText();
      }
   }

   public static String getFieldTemperature()
   {
      if(fieldTemperature.getText().isEmpty())
      {
         JOptionPane.showMessageDialog(null, "Digite uma " + labelTemperature.getText(), "Erro", JOptionPane.ERROR_MESSAGE);
         return null;
      }
      else
      {
         return fieldTemperature.getText();
      }
   }

   public static float getFieldBodyMass()
   {
      try
      {
         return Float.parseFloat(fieldBodyMass.getText());
      }
      catch (NumberFormatException ex)
      {
	 JOptionPane.showMessageDialog(null, "Digite um número em " + labelBodyMass.getText(), "Erro", JOptionPane.ERROR_MESSAGE);
	 return -1;
      }
   }

   public static float getFieldHeight()
   {
      try
      {
	 return Float.parseFloat(fieldHeight.getText());
      }
      catch (NumberFormatException ex)
      {
	 JOptionPane.showMessageDialog(null, "Digite um número em " + labelHeight.getText(), "Erro", JOptionPane.ERROR_MESSAGE);
	 return -1;
      }
   }

   public static float getFieldIMC()
   {
      try
      {
	 return Float.parseFloat(fieldIMC.getText());
      }
      catch (NumberFormatException ex)
      {
	 JOptionPane.showMessageDialog(null, "Digite um número em " + labelIMC.getText(), "Erro", JOptionPane.ERROR_MESSAGE);
	 return -1;
      }
   }

   public static float getFieldSpread()
   {
      try
      {
	 return Float.parseFloat(fieldSpread.getText());
      }
      catch (NumberFormatException ex)
      {
	 JOptionPane.showMessageDialog(null, "Digite um número em " + labelSpread.getText(), "Erro", JOptionPane.ERROR_MESSAGE);
	 return -1;
      }
   }

   public static int getFieldSitUp()
   {
      try
      {
	 return Integer.parseInt(fieldSitUp.getText());
      }
      catch (NumberFormatException ex)
      {
	 JOptionPane.showMessageDialog(null, "Digite um número em " + labelSitUp.getText(), "Erro", JOptionPane.ERROR_MESSAGE);
	 return -1;
      }
   }

   public static float getFieldSitAndAchieve()
   {
      try
      {
	 return Float.parseFloat(fieldSitAndAchieve.getText());
      }
      catch (NumberFormatException ex)
      {
	 JOptionPane.showMessageDialog(null, "Digite um número em " + labelSitAndAchieve.getText(), "Erro", JOptionPane.ERROR_MESSAGE);
	 return -1;
      }
   }
   
   public static boolean getRadioSitAndAchieveWithSeat()
   {
      if(radioSitAndAchieveWithSeat.isSelected())
         return true;
      else
         return false;
   }

   public static boolean getRadioSitAndAchieveWithoutSeat()
   {
      if(radioSitAndAchieveWithoutSeat.isSelected())
         return true;
      else
         return false;
   }

   public static float getFieldRun6Or9Minutes()
   {
      try
      {
	 return Float.parseFloat(fieldRun.getText());
      }
      catch (NumberFormatException ex)
      {
	 JOptionPane.showMessageDialog(null, "Digite um número em " + labelRun.getText(), "Erro", JOptionPane.ERROR_MESSAGE);
	 return -1;
      }
   }

   public static boolean getRadio6Minutes()
   {
      if(radio6Minutes.isSelected())
         return true;
      else
         return false;
   }

   public static boolean getRadio9Minutes()
   {
      if(radio9Minutes.isSelected())
         return true;
      else
         return false;
   }
   
   public static float getFieldHorizontalJump()
   {
      try
      {
	 return Float.parseFloat(fieldHorizontalJump.getText());
      }
      catch (NumberFormatException ex)
      {
	 JOptionPane.showMessageDialog(null, "Digite um número em " + labelHorizontalJump.getText(), "Erro", JOptionPane.ERROR_MESSAGE);
	 return -1;
      }
   }

   public static float getFieldSquareTest()
   {
      try
      {
	 return Float.parseFloat(fiedlSquareTest.getText());
      }
      catch (NumberFormatException ex)
      {
	 JOptionPane.showMessageDialog(null, "Digite um número em " + labelSquareTest.getText(), "Erro", JOptionPane.ERROR_MESSAGE);
	 return -1;
      }
   }
   
   public static float getFieldThrowOfMedicineBall()
   {
      try
      {
	 return Float.parseFloat(fieldThrowOfMedicineBall.getText());
      }
      catch (NumberFormatException ex)
      {
	 JOptionPane.showMessageDialog(null, "Digite um número em " + labelThrowOfMedicineBall.getText(), "Erro", JOptionPane.ERROR_MESSAGE);
	 return -1;
      }
   }
   
   public static float getField20MetersRun()
   {
      try
      {
	 return Float.parseFloat(field20MetersRun.getText());
      }
      catch (NumberFormatException ex)
      {
	 JOptionPane.showMessageDialog(null, "Digite um número em " + label20MetersRun.getText(), "Erro", JOptionPane.ERROR_MESSAGE);
	 return -1;
      }
   }
}
