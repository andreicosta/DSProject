/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * StudentPanel.java
 *
 * Created on 14/06/2013, 13:59:28
 */
package Interface;

import dsproject.Aluno;
import java.awt.Color;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author Günther
 */
public class StudentPanel extends javax.swing.JPanel {

    /** Creates new form StudentPanel */
    public StudentPanel() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents()
   {

      jTabbedPane1 = new javax.swing.JTabbedPane();
      newStudentPanel = new javax.swing.JPanel();
      labelNomeCompletoCadastrarAluno = new javax.swing.JLabel();
      labelDataDeNascimentoCadastrarAluno = new javax.swing.JLabel();
      labelNomeDoPaiCadastrarAluno = new javax.swing.JLabel();
      labelNomeDaMaeCadastrarAluno = new javax.swing.JLabel();
      labelEnderecoCadastrarAluno = new javax.swing.JLabel();
      labelTelefoneCadastrarAluno = new javax.swing.JLabel();
      labelCelularCadastrarAluno = new javax.swing.JLabel();
      labelEmailCadastrarAluno = new javax.swing.JLabel();
      campoNomeCompletoCadastrarAluno = new javax.swing.JTextField();
      campoNomeDaMaeCadastrarAluno = new javax.swing.JTextField();
      campoNomeDoPaiCadastrarAluno = new javax.swing.JTextField();
      campoTelefoneCadastrarAluno = new javax.swing.JTextField();
      campoEnderecoCadastrarAluno = new javax.swing.JTextField();
      campoCelularCadastrarAluno = new javax.swing.JTextField();
      campoEmailCadastrarAluno = new javax.swing.JTextField();
      botaoCadastrar = new javax.swing.JButton();
      labelGeneroCadastrarAluno = new javax.swing.JLabel();
      comboGeneroCadastrarAluno = new javax.swing.JComboBox();
      labelCidadeCadastrarAluno = new javax.swing.JLabel();
      campoCidadeCadastrarAluno = new javax.swing.JTextField();
      campoEstadoCadastrarAluno = new javax.swing.JTextField();
      labelEstadoCadastrarAluno = new javax.swing.JLabel();
      dateChooserDataDeNascimento = new com.toedter.calendar.JDateChooser();
      editStudentPanel = new javax.swing.JPanel();
      labelNome = new javax.swing.JLabel();
      labelNomeDoPai = new javax.swing.JLabel();
      labelNomeDaMae = new javax.swing.JLabel();
      labelEndereco = new javax.swing.JLabel();
      labelTelefone = new javax.swing.JLabel();
      labelCelular = new javax.swing.JLabel();
      labelDataDeNascimento = new javax.swing.JLabel();
      labelE_mail = new javax.swing.JLabel();
      campoNomeDaMae = new javax.swing.JTextField();
      campoNomeDoPai = new javax.swing.JTextField();
      campoTelefone = new javax.swing.JTextField();
      campoEndereco = new javax.swing.JTextField();
      campoCelular = new javax.swing.JTextField();
      campoEmail = new javax.swing.JTextField();
      comboNome = new javax.swing.JComboBox();
      saveStudent = new javax.swing.JButton();
      labelGenero = new javax.swing.JLabel();
      comboGenero = new javax.swing.JComboBox();
      labelCidade = new javax.swing.JLabel();
      labelEstado = new javax.swing.JLabel();
      campoCidade = new javax.swing.JTextField();
      campoEstado = new javax.swing.JTextField();
      dateChooserDataDeNascimentoEditar = new com.toedter.calendar.JDateChooser();
      deleteStudentPanel = new javax.swing.JPanel();
      labelNomeExcluirCadastroAluno = new javax.swing.JLabel();
      comboNomeExcluirCadastroAluno = new javax.swing.JComboBox();
      jButton1 = new javax.swing.JButton();

      setMinimumSize(new java.awt.Dimension(833, 515));

      newStudentPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

      labelNomeCompletoCadastrarAluno.setText("Nome Completo");
      newStudentPanel.add(labelNomeCompletoCadastrarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 45, -1, -1));

      labelDataDeNascimentoCadastrarAluno.setText("Data de Nascimento");
      newStudentPanel.add(labelDataDeNascimentoCadastrarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 83, -1, -1));

      labelNomeDoPaiCadastrarAluno.setText("Nome Completo do Pai");
      newStudentPanel.add(labelNomeDoPaiCadastrarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 277, -1, 14));

      labelNomeDaMaeCadastrarAluno.setText("Nome Completo da Mãe");
      newStudentPanel.add(labelNomeDaMaeCadastrarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 243, -1, -1));

      labelEnderecoCadastrarAluno.setText("Endereço");
      newStudentPanel.add(labelEnderecoCadastrarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 144, -1, -1));

      labelTelefoneCadastrarAluno.setText("Telefone");
      newStudentPanel.add(labelTelefoneCadastrarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 309, -1, -1));

      labelCelularCadastrarAluno.setText("Celular");
      newStudentPanel.add(labelCelularCadastrarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 342, -1, -1));

      labelEmailCadastrarAluno.setText("E-mail");
      newStudentPanel.add(labelEmailCadastrarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 376, -1, -1));

      campoNomeCompletoCadastrarAluno.setToolTipText("teste");
      newStudentPanel.add(campoNomeCompletoCadastrarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, 40, 396, -1));
      newStudentPanel.add(campoNomeDaMaeCadastrarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, 238, 396, -1));
      newStudentPanel.add(campoNomeDoPaiCadastrarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, 271, 396, -1));
      newStudentPanel.add(campoTelefoneCadastrarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, 304, 396, -1));
      newStudentPanel.add(campoEnderecoCadastrarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, 139, 396, -1));
      newStudentPanel.add(campoCelularCadastrarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, 337, 396, -1));
      newStudentPanel.add(campoEmailCadastrarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, 371, 396, -1));

      botaoCadastrar.setText("Cadastrar");
      botaoCadastrar.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            botaoCadastrarActionPerformed(evt);
         }
      });
      newStudentPanel.add(botaoCadastrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 417, 90, -1));

      labelGeneroCadastrarAluno.setText("Gênero");
      newStudentPanel.add(labelGeneroCadastrarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 111, -1, -1));

      comboGeneroCadastrarAluno.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Masculino", "Feminino", "Outro" }));
      newStudentPanel.add(comboGeneroCadastrarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, 106, 396, -1));

      labelCidadeCadastrarAluno.setText("Cidade");
      newStudentPanel.add(labelCidadeCadastrarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 177, -1, -1));
      newStudentPanel.add(campoCidadeCadastrarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, 172, 396, -1));
      newStudentPanel.add(campoEstadoCadastrarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, 205, 396, -1));

      labelEstadoCadastrarAluno.setText("Estado");
      newStudentPanel.add(labelEstadoCadastrarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 210, -1, -1));
      newStudentPanel.add(dateChooserDataDeNascimento, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, 73, 396, -1));

      jTabbedPane1.addTab("Cadastrar Aluno", newStudentPanel);

      editStudentPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

      labelNome.setText("Nome Completo");
      editStudentPanel.add(labelNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 45, -1, -1));

      labelNomeDoPai.setText("Nome Completo do Pai");
      editStudentPanel.add(labelNomeDoPai, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 277, -1, 14));

      labelNomeDaMae.setText("Nome Completo da Mãe");
      editStudentPanel.add(labelNomeDaMae, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 243, -1, -1));

      labelEndereco.setText("Endereço");
      editStudentPanel.add(labelEndereco, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 144, -1, -1));

      labelTelefone.setText("Telefone");
      editStudentPanel.add(labelTelefone, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 309, -1, -1));

      labelCelular.setText("Celular");
      editStudentPanel.add(labelCelular, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 342, -1, -1));

      labelDataDeNascimento.setText("Data de Nascimento");
      editStudentPanel.add(labelDataDeNascimento, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 83, -1, -1));

      labelE_mail.setText("E-mail");
      editStudentPanel.add(labelE_mail, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 376, -1, -1));
      editStudentPanel.add(campoNomeDaMae, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, 238, 396, -1));
      editStudentPanel.add(campoNomeDoPai, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, 271, 396, -1));
      editStudentPanel.add(campoTelefone, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, 304, 396, -1));
      editStudentPanel.add(campoEndereco, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, 139, 396, -1));
      editStudentPanel.add(campoCelular, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, 337, 396, -1));
      editStudentPanel.add(campoEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, 371, 396, -1));

      comboNome.addPopupMenuListener(new javax.swing.event.PopupMenuListener()
      {
         public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt)
         {
         }
         public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt)
         {
         }
         public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt)
         {
            comboNomePopupMenuWillBecomeVisible(evt);
         }
      });
      comboNome.addItemListener(new java.awt.event.ItemListener()
      {
         public void itemStateChanged(java.awt.event.ItemEvent evt)
         {
            comboNomeItemStateChanged(evt);
         }
      });
      editStudentPanel.add(comboNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, 40, 396, -1));

      saveStudent.setText("Salvar");
      editStudentPanel.add(saveStudent, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 416, 90, -1));

      labelGenero.setText("Gênero");
      editStudentPanel.add(labelGenero, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 111, -1, -1));

      comboGenero.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Masculino", "Feminino", "Outro" }));
      editStudentPanel.add(comboGenero, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, 106, 396, -1));

      labelCidade.setText("Cidade");
      editStudentPanel.add(labelCidade, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 177, -1, -1));

      labelEstado.setText("Estado");
      editStudentPanel.add(labelEstado, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 210, -1, -1));
      editStudentPanel.add(campoCidade, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, 172, 396, -1));
      editStudentPanel.add(campoEstado, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, 205, 396, -1));

      dateChooserDataDeNascimentoEditar.setPreferredSize(new java.awt.Dimension(396, 27));
      editStudentPanel.add(dateChooserDataDeNascimentoEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, 73, 396, -1));

      jTabbedPane1.addTab("Editar Informações do Aluno", editStudentPanel);

      deleteStudentPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

      labelNomeExcluirCadastroAluno.setText("Selecione um Aluno");
      deleteStudentPanel.add(labelNomeExcluirCadastroAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 45, -1, -1));

      comboNomeExcluirCadastroAluno.addPopupMenuListener(new javax.swing.event.PopupMenuListener()
      {
         public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt)
         {
         }
         public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt)
         {
         }
         public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt)
         {
            comboNomeExcluirCadastroAlunoPopupMenuWillBecomeVisible(evt);
         }
      });
      deleteStudentPanel.add(comboNomeExcluirCadastroAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 40, 536, -1));

      jButton1.setText("Excluir");
      deleteStudentPanel.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(666, 80, 90, -1));

      jTabbedPane1.addTab("Excluir Cadastro do Aluno", deleteStudentPanel);

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
      this.setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 833, Short.MAX_VALUE)
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 515, Short.MAX_VALUE)
      );
   }// </editor-fold>//GEN-END:initComponents

   private void botaoCadastrarActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_botaoCadastrarActionPerformed
   {//GEN-HEADEREND:event_botaoCadastrarActionPerformed
      String nome = getCampoNomeCompleto();
      java.util.Date dataDeNascimento = getCampoDataDeNascimento();
      String genero = getComboGenero();
      String endereco = getCampoEndereco();
      String cidade = getCampoCidade();
      String estado = getCampoEstado();
      String nomeDaMae = getCampoNomeDaMae();
      String nomeDoPai = getCampoNomeDoPai();
      String telefone = getFieldTelephone();
      String celular = getFieldCellPhone();
      String email = getFieldEmail();
      SimpleDateFormat sd = new SimpleDateFormat("dd/MM/yyyy");
      //ArrayList<dsproject.Aluno> alunos;
      dsproject.Aluno aluno = null;
      ObjectInputStream in;
      ObjectOutputStream out;
      
      if(nome == null)
      {
         System.err.println("Nome faltando");
      }
      else
      {
         if(dataDeNascimento == null)
         {
            System.err.println("Data de nascimento faltando");
         }
         else
         {
            labelDataDeNascimentoCadastrarAluno.setForeground(Color.black);
            if(genero == null)
            {
               System.err.println("Gênero faltando");
            }
            else
            {
               if(endereco == null)
               {
                  System.err.println("Endereço faltando");
               }
               else
               {
                  if(cidade == null)
                  {
                     System.err.println("Cidade faltando");
                  }
                  else
                  {
                     if(estado == null)
                     {
                        System.err.println("Estado faltando");
                     }
                     else
                     {
                        if(nomeDaMae == null)
                        {
                           System.err.println("Nome da Mãe faltando");
                        }
                        else
                        {
                           if(nomeDoPai == null)
                           {
                              System.err.println("Nome do Pai faltando");
                           }
                           else
                           {
                              java.sql.Date sqlDateOfBirth = new java.sql.Date(dataDeNascimento.getTime());
                              if(telefone == null && celular == null && email == null)
                              {
                                 aluno = new Aluno(nomeDaMae, nomeDoPai, null, null, null, null, nome, sqlDateOfBirth, genero, endereco, cidade, estado);
                              }
                              else
                              {
                                 if(telefone == null && !celular.isEmpty() && !email.isEmpty())
                                 {
                                    aluno = new Aluno(nomeDaMae, nomeDoPai, null, null, celular, email, nome, sqlDateOfBirth, genero, endereco, cidade, estado);
                                 }
                                 else
                                 {
                                    if(telefone == null && celular == null && !email.isEmpty())
                                    {
                                       aluno = new Aluno(nomeDaMae, nomeDoPai, null, null, null, email, nome, sqlDateOfBirth, genero, endereco, cidade, estado);
                                    }
                                    else
                                    {
                                       if(telefone == null && !celular.isEmpty() && email == null)
                                       {
                                          aluno = new Aluno(nomeDaMae, nomeDoPai, null, null, celular, null, nome, sqlDateOfBirth, genero, endereco, cidade, estado);
                                       }
                                       else
                                       {
                                          if(!telefone.isEmpty() && celular == null && email == null)
                                          {
                                             aluno = new Aluno(nomeDaMae, nomeDoPai, null, telefone, null, null, nome, sqlDateOfBirth, genero, endereco, cidade, estado);
                                          }
                                          else
                                          {
                                             aluno = new Aluno(nomeDaMae, nomeDoPai, null, telefone, celular, email, nome, sqlDateOfBirth, genero, endereco, cidade, estado);
                                          }
                                       }
                                    }
                                 }
                              }

                              MainPanel.alunosLidos.add(aluno);
                              JOptionPane.showMessageDialog(null, "Aluno salvo com sucesso", "Confirmação!", JOptionPane.INFORMATION_MESSAGE);
                              labelCelularCadastrarAluno.setForeground(Color.black);
                              labelCidadeCadastrarAluno.setForeground(Color.black);
                              labelDataDeNascimentoCadastrarAluno.setForeground(Color.black);
                              labelEmailCadastrarAluno.setForeground(Color.black);
                              labelEnderecoCadastrarAluno.setForeground(Color.black);
                              labelEstadoCadastrarAluno.setForeground(Color.black);
                              labelGeneroCadastrarAluno.setForeground(Color.black);
                              labelNomeDaMaeCadastrarAluno.setForeground(Color.black);
                              labelNomeDoPaiCadastrarAluno.setForeground(Color.black);
                              labelTelefoneCadastrarAluno.setForeground(Color.black);
                              labelNomeCompletoCadastrarAluno.setForeground(Color.black);
                              Interface.ClassPanel.setStudentAddedComboAluno(true);
                              Interface.ClassPanel.setStudentAddedComboAdicionarAluno(true);
                              Interface.ClassPanel.setStudentAddedCombonomeDoAluno(true);
                              setStudentAddedComboName(true);
                              setStudentAddedComboStudent(true);
                              setNumeroDeAlunosAdicionadosComboName(getNumeroDeAlunosAdicionadosComboName() + 1);
                              setNumeroDeAlunosAdicionadosComboStudent(getNumeroDeAlunosAdicionadosComboStudent() + 1);
                              Interface.ClassPanel.setNumeroDeAlunosAdicionadosComboAdicionarAluno(Interface.ClassPanel.getNumeroDeAlunosAdicionadosComboAdicionarAluno() 
                                                                                               + 1);
                              Interface.ClassPanel.setNumeroDeAlunosAdicionadosComboAluno(Interface.ClassPanel.getNumeroDeAlunosAdicionadosComboAluno()
                                                                                               + 1);
                              Interface.ClassPanel.setNumeroDeAlunosAdicionadosComboNomeDoAluno(Interface.ClassPanel.getNumeroDeAlunosAdicionadosComboNomeDoAluno()
                                                                                                                       + 1);
                              limpaCamposCadastrarAluno();
                           }
                        }
                     }
                  }
               }
            }
         }
      }
   }//GEN-LAST:event_botaoCadastrarActionPerformed

   private void comboNomePopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt)//GEN-FIRST:event_comboNomePopupMenuWillBecomeVisible
   {//GEN-HEADEREND:event_comboNomePopupMenuWillBecomeVisible
      Object isNull;
      isNull = comboNome.getItemAt(0);
      int i = 0;
      
      if(isStudentAddedComboStudent() && isNull == null)
      {
         i = 0;
         comboNome.addItem("");
         
         if(MainPanel.alunosLidos != null)
         {
            while(i < MainPanel.alunosLidos.size())
            {
               comboNome.addItem(MainPanel.alunosLidos.get(i).getNome());
               i++;
            }
         }
         
         setStudentAddedComboStudent(false);
         setNumeroDeAlunosAdicionadosComboStudent(0);
      }
      else
      {
         if(isStudentAddedComboStudent() && isNull != null)
         {
            i = (MainPanel.alunosLidos.size() - getNumeroDeAlunosAdicionadosComboStudent());
            
            if(MainPanel.alunosLidos != null)
            {
               while(i < MainPanel.alunosLidos.size())
               {
                  comboNome.addItem(MainPanel.alunosLidos.get(i).getNome());
                  i++;
               }
            }
            
            setStudentAddedComboStudent(false);
            setNumeroDeAlunosAdicionadosComboStudent(0);
         }
         else
         {
            if(isNull == null)
            {
               i = 0;
               comboNome.addItem("");
               if(MainPanel.alunosLidos != null)
               {
                  while(i < MainPanel.alunosLidos.size())
                  {
                     comboNome.addItem(MainPanel.alunosLidos.get(i).getNome());
                     i++;
                  }
               }
            }
         }
      }
   }//GEN-LAST:event_comboNomePopupMenuWillBecomeVisible

   private void comboNomeExcluirCadastroAlunoPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt)//GEN-FIRST:event_comboNomeExcluirCadastroAlunoPopupMenuWillBecomeVisible
   {//GEN-HEADEREND:event_comboNomeExcluirCadastroAlunoPopupMenuWillBecomeVisible
      Object isNull;
      isNull = comboNomeExcluirCadastroAluno.getItemAt(0);
      int i = 0;
      
      if(isStudentAddedComboName()&& isNull == null)
      {
         i = 0;
         comboNomeExcluirCadastroAluno.addItem("");
         
         if(MainPanel.alunosLidos != null)
         {
            while(i < MainPanel.alunosLidos.size())
            {
               comboNomeExcluirCadastroAluno.addItem(MainPanel.alunosLidos.get(i).getNome());
               i++;
            }
         }
         
         setStudentAddedComboName(false);
         setNumeroDeAlunosAdicionadosComboName(0);
      }
      else
      {
         if(isStudentAddedComboName() && isNull != null)
         {
            i = (MainPanel.alunosLidos.size() - getNumeroDeAlunosAdicionadosComboName());
            
            if(MainPanel.alunosLidos != null)
            {
               while(i < MainPanel.alunosLidos.size())
               {
                  comboNomeExcluirCadastroAluno.addItem(MainPanel.alunosLidos.get(i).getNome());
                  i++;
               }
            }
            
            setStudentAddedComboName(false);
            setNumeroDeAlunosAdicionadosComboName(0);
         }
         else
         {
            if(isNull == null)
            {
               i = 0;               
               comboNomeExcluirCadastroAluno.addItem("");
               
               if(MainPanel.alunosLidos != null)
               {
                  while(i < MainPanel.alunosLidos.size())
                  {
                     comboNomeExcluirCadastroAluno.addItem(MainPanel.alunosLidos.get(i).getNome());
                     i++;
                  }
               }                
            }
         }
      }
   }//GEN-LAST:event_comboNomeExcluirCadastroAlunoPopupMenuWillBecomeVisible

   private void comboNomeItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_comboNomeItemStateChanged
   {//GEN-HEADEREND:event_comboNomeItemStateChanged
      if (evt.getStateChange() == 1)
      {
         if(evt.getItem().equals(""))
         {
            System.out.println("espaço em branco"); 
            limpaCamposEditarInformacoesAluno();
         }
         else
         {
            int i = 0;
            SimpleDateFormat sd = new SimpleDateFormat("dd/MM/yyyy");
            
            if(MainPanel.alunosLidos != null)
            {
               for(i = 0; i < MainPanel.alunosLidos.size(); i++)
               {
                  if(MainPanel.alunosLidos.get(i).getNome().equals(evt.getItem().toString()))
                  {
                     dateChooserDataDeNascimentoEditar.setDate(MainPanel.alunosLidos.get(i).getDataDeNascimento());
                     comboGenero.setSelectedItem(MainPanel.alunosLidos.get(i).getGenero());
                     campoEndereco.setText(MainPanel.alunosLidos.get(i).getEndereco());
                     campoCidade.setText(MainPanel.alunosLidos.get(i).getCidade());
                     campoEstado.setText(MainPanel.alunosLidos.get(i).getEstado());
                     campoNomeDaMae.setText(MainPanel.alunosLidos.get(i).getNomeDaMae());
                     campoNomeDoPai.setText(MainPanel.alunosLidos.get(i).getNomeDoPai());
                     campoTelefone.setText(MainPanel.alunosLidos.get(i).getTelefone());
                     campoCelular.setText(MainPanel.alunosLidos.get(i).getCelular());
                     campoEmail.setText(MainPanel.alunosLidos.get(i).getEmail());
                  }
               }
            }
         }
      }
   }//GEN-LAST:event_comboNomeItemStateChanged


   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JButton botaoCadastrar;
   private javax.swing.JTextField campoCelular;
   private static javax.swing.JTextField campoCelularCadastrarAluno;
   private javax.swing.JTextField campoCidade;
   private static javax.swing.JTextField campoCidadeCadastrarAluno;
   private javax.swing.JTextField campoEmail;
   private static javax.swing.JTextField campoEmailCadastrarAluno;
   private javax.swing.JTextField campoEndereco;
   private static javax.swing.JTextField campoEnderecoCadastrarAluno;
   private javax.swing.JTextField campoEstado;
   private static javax.swing.JTextField campoEstadoCadastrarAluno;
   private static javax.swing.JTextField campoNomeCompletoCadastrarAluno;
   private javax.swing.JTextField campoNomeDaMae;
   private static javax.swing.JTextField campoNomeDaMaeCadastrarAluno;
   private javax.swing.JTextField campoNomeDoPai;
   private static javax.swing.JTextField campoNomeDoPaiCadastrarAluno;
   private javax.swing.JTextField campoTelefone;
   private static javax.swing.JTextField campoTelefoneCadastrarAluno;
   private javax.swing.JComboBox comboGenero;
   private static javax.swing.JComboBox comboGeneroCadastrarAluno;
   private javax.swing.JComboBox comboNome;
   private static javax.swing.JComboBox comboNomeExcluirCadastroAluno;
   private static com.toedter.calendar.JDateChooser dateChooserDataDeNascimento;
   private static com.toedter.calendar.JDateChooser dateChooserDataDeNascimentoEditar;
   private javax.swing.JPanel deleteStudentPanel;
   private javax.swing.JPanel editStudentPanel;
   private javax.swing.JButton jButton1;
   private javax.swing.JTabbedPane jTabbedPane1;
   private javax.swing.JLabel labelCelular;
   private static javax.swing.JLabel labelCelularCadastrarAluno;
   private javax.swing.JLabel labelCidade;
   private static javax.swing.JLabel labelCidadeCadastrarAluno;
   private javax.swing.JLabel labelDataDeNascimento;
   private static javax.swing.JLabel labelDataDeNascimentoCadastrarAluno;
   private javax.swing.JLabel labelE_mail;
   private static javax.swing.JLabel labelEmailCadastrarAluno;
   private javax.swing.JLabel labelEndereco;
   private static javax.swing.JLabel labelEnderecoCadastrarAluno;
   private javax.swing.JLabel labelEstado;
   private static javax.swing.JLabel labelEstadoCadastrarAluno;
   private javax.swing.JLabel labelGenero;
   private static javax.swing.JLabel labelGeneroCadastrarAluno;
   private javax.swing.JLabel labelNome;
   private static javax.swing.JLabel labelNomeCompletoCadastrarAluno;
   private javax.swing.JLabel labelNomeDaMae;
   private static javax.swing.JLabel labelNomeDaMaeCadastrarAluno;
   private javax.swing.JLabel labelNomeDoPai;
   private static javax.swing.JLabel labelNomeDoPaiCadastrarAluno;
   private javax.swing.JLabel labelNomeExcluirCadastroAluno;
   private javax.swing.JLabel labelTelefone;
   private static javax.swing.JLabel labelTelefoneCadastrarAluno;
   private javax.swing.JPanel newStudentPanel;
   private javax.swing.JButton saveStudent;
   // End of variables declaration//GEN-END:variables
   private static boolean studentAddedComboStudent;
   private static boolean studentAddedComboName;
   private int numeroDeAlunosAdicionadosComboStudent = 0;
   private int numeroDeAlunosAdicionadosComboName = 0;

   public int getNumeroDeAlunosAdicionadosComboStudent()
   {
      return numeroDeAlunosAdicionadosComboStudent;
   }

   public void setNumeroDeAlunosAdicionadosComboStudent(int numeroDeAlunosAdicionadosComboStudent)
   {
      this.numeroDeAlunosAdicionadosComboStudent = numeroDeAlunosAdicionadosComboStudent;
   }

   public int getNumeroDeAlunosAdicionadosComboName()
   {
      return numeroDeAlunosAdicionadosComboName;
   }

   public void setNumeroDeAlunosAdicionadosComboName(int numeroDeAlunosAdicionadosComboName)
   {
      this.numeroDeAlunosAdicionadosComboName = numeroDeAlunosAdicionadosComboName;
   }
   
   public static boolean isStudentAddedComboStudent()
   {
      return studentAddedComboStudent;
   }
   
   public static void setStudentAddedComboStudent(boolean studentAdded)
   {
      StudentPanel.studentAddedComboStudent = studentAdded;
   }

   public static boolean isStudentAddedComboName()
   {
      return studentAddedComboName;
   }

   public static void setStudentAddedComboName(boolean studentAddedComboName)
   {
      StudentPanel.studentAddedComboName = studentAddedComboName;
   }
   
   public static String getCampoNomeCompleto()
   {
      if(campoNomeCompletoCadastrarAluno.getText().isEmpty())
      {
         labelNomeCompletoCadastrarAluno.setForeground(Color.red);
         //JOptionPane.showMessageDialog(null, "Digite um " + labelNomeCompleto.getText(), "Erro", JOptionPane.ERROR_MESSAGE);
         return null;
      }
      else
      {
         labelNomeCompletoCadastrarAluno.setForeground(Color.black);
         return campoNomeCompletoCadastrarAluno.getText();
      }
   }

   public static Date getCampoDataDeNascimento()
   {
      if(dateChooserDataDeNascimento.getDate() == null)
      {
         labelDataDeNascimentoCadastrarAluno.setForeground(Color.red);
         //JOptionPane.showMessageDialog(null, "Digite uma " + labelDataDeNascimentoCadastrarAluno.getText(), "Erro", JOptionPane.ERROR_MESSAGE);
         return null;
      }
      else
      {
         return dateChooserDataDeNascimento.getDate();
      }
   }

   public static String getComboGenero()
   {
      if(comboGeneroCadastrarAluno.getSelectedIndex() == -1)
      {
         labelGeneroCadastrarAluno.setForeground(Color.red);
         //JOptionPane.showMessageDialog(null, "Escolha um " + labelGeneroCadastrarAluno.getText(), "Erro", JOptionPane.ERROR_MESSAGE);
         return null;
      }
      else
      {
         labelGeneroCadastrarAluno.setForeground(Color.black);
         return comboGeneroCadastrarAluno.getSelectedItem().toString();
      }
   }
   
   public static String getCampoEndereco()
   {
      if(campoEnderecoCadastrarAluno.getText().isEmpty())
      {
         labelEnderecoCadastrarAluno.setForeground(Color.red);
         //JOptionPane.showMessageDialog(null, "Digite um " + labelEnderecoCadastrarAluno.getText(), "Erro", JOptionPane.ERROR_MESSAGE);
         return null;
      }
      else
      {
         labelEnderecoCadastrarAluno.setForeground(Color.black);
         return campoEnderecoCadastrarAluno.getText();
      }
   }
   
   public static String getCampoCidade()
   {
      if(campoCidadeCadastrarAluno.getText().isEmpty())
      {
         labelCidadeCadastrarAluno.setForeground(Color.red);
         //JOptionPane.showMessageDialog(null, "Digite uma " + labelCidadeCadastrarAluno.getText(), "Erro", JOptionPane.ERROR_MESSAGE);
         return null;
      }
      else
      {
         labelCidadeCadastrarAluno.setForeground(Color.black);
         return campoCidadeCadastrarAluno.getText();
      }
   }
   
   public static String getCampoEstado()
   {
      if(campoEstadoCadastrarAluno.getText().isEmpty())
      {
         labelEstadoCadastrarAluno.setForeground(Color.red);
         //JOptionPane.showMessageDialog(null, "Digite um " + labelEstadoCadastrarAluno.getText(), "Erro", JOptionPane.ERROR_MESSAGE);
         return null;
      }
      else
      {
         labelEstadoCadastrarAluno.setForeground(Color.black);
         return campoEstadoCadastrarAluno.getText();
      }
   }
   
   public static String getCampoNomeDaMae()
   {
      if(campoNomeDaMaeCadastrarAluno.getText().isEmpty())
      {
         labelNomeDaMaeCadastrarAluno.setForeground(Color.red);
         //JOptionPane.showMessageDialog(null, "Digite um " + labelNomeDaMaeCadastrarAluno.getText(), "Erro", JOptionPane.ERROR_MESSAGE);
         return null;
      }
      else
      {
         labelNomeDaMaeCadastrarAluno.setForeground(Color.black);
         return campoNomeDaMaeCadastrarAluno.getText();
      }
   }
   
   public static String getCampoNomeDoPai()
   {
      if(campoNomeDoPaiCadastrarAluno.getText().isEmpty())
      {
         labelNomeDoPaiCadastrarAluno.setForeground(Color.red);
         //JOptionPane.showMessageDialog(null, "Digite um " + labelNomeDoPaiCadastrarAluno.getText(), "Erro", JOptionPane.ERROR_MESSAGE);
         return null;
      }
      else
      {
         labelNomeDoPaiCadastrarAluno.setForeground(Color.black);
         return campoNomeDoPaiCadastrarAluno.getText();
      }
   }
   
   public static String getFieldTelephone()
   {
      if(campoTelefoneCadastrarAluno.getText().isEmpty())
         return null;
      else
         return campoTelefoneCadastrarAluno.getText();  
   }

   public static String getFieldCellPhone()
   {
      if(campoCelularCadastrarAluno.getText().isEmpty())
         return null;
      else
         return campoCelularCadastrarAluno.getText();
   }

   public static String getFieldEmail()
   {
      if(campoEmailCadastrarAluno.getText().isEmpty())
         return null;
      else
         return campoEmailCadastrarAluno.getText();
   }
   
   public void limpaCamposCadastrarAluno()
   {
      campoNomeCompletoCadastrarAluno.setText("");
      campoEnderecoCadastrarAluno.setText("");
      campoCelularCadastrarAluno.setText("");
      campoCidadeCadastrarAluno.setText("");
      //campoDataDeNascimentoCadastrarAluno.setText("");
      campoEmailCadastrarAluno.setText("");
      campoNomeDoPaiCadastrarAluno.setText("");
      campoNomeDaMaeCadastrarAluno.setText("");
      campoEstadoCadastrarAluno.setText("");
      campoTelefoneCadastrarAluno.setText("");
   }
   
   public void limpaCamposEditarInformacoesAluno()
   {
      campoCelular.setText("");
      campoCidade.setText("");
      campoEmail.setText("");
      campoEndereco.setText("");
      campoEstado.setText("");
      campoNomeDaMae.setText("");
      campoNomeDoPai.setText("");
      campoTelefone.setText("");
   }
}
