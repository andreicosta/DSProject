/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * StudentPanel.java
 *
 * Created on 14/06/2013, 13:59:28
 */
package Interface;

import dsproject.Aluno;
import java.awt.Color;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author Günther
 */
public class StudentPanel extends javax.swing.JPanel {

    /** Creates new form StudentPanel */
    public StudentPanel() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        newStudentPanel = new javax.swing.JPanel();
        labelNomeCompletoCadastrarAluno = new javax.swing.JLabel();
        labelDataDeNascimentoCadastrarAluno = new javax.swing.JLabel();
        labelNomeDoPaiCadastrarAluno = new javax.swing.JLabel();
        labelNomeDaMaeCadastrarAluno = new javax.swing.JLabel();
        labelEnderecoCadastrarAluno = new javax.swing.JLabel();
        labelTelefoneCadastrarAluno = new javax.swing.JLabel();
        labelCelularCadastrarAluno = new javax.swing.JLabel();
        labelEmailCadastrarAluno = new javax.swing.JLabel();
        campoNomeCompletoCadastrarAluno = new javax.swing.JTextField();
        campoNomeDaMaeCadastrarAluno = new javax.swing.JTextField();
        campoNomeDoPaiCadastrarAluno = new javax.swing.JTextField();
        campoTelefoneCadastrarAluno = new javax.swing.JTextField();
        campoEnderecoCadastrarAluno = new javax.swing.JTextField();
        campoCelularCadastrarAluno = new javax.swing.JTextField();
        campoEmailCadastrarAluno = new javax.swing.JTextField();
        botaoCadastrar = new javax.swing.JButton();
        labelGeneroCadastrarAluno = new javax.swing.JLabel();
        comboGeneroCadastrarAluno = new javax.swing.JComboBox();
        labelCidadeCadastrarAluno = new javax.swing.JLabel();
        campoCidadeCadastrarAluno = new javax.swing.JTextField();
        dateChooserDataDeNascimento = new com.toedter.calendar.JDateChooser();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        editStudentPanel = new javax.swing.JPanel();
        labelNomeCompletoEditarAluno = new javax.swing.JLabel();
        labelNomeDoPaiEditarAluno = new javax.swing.JLabel();
        labelNomeDaMaeEditarAluno = new javax.swing.JLabel();
        labelEnderecoEditarAluno = new javax.swing.JLabel();
        labelTelefoneEditarAluno = new javax.swing.JLabel();
        labelCelularEditarAluno = new javax.swing.JLabel();
        labelDataDeNascimentoEditarAluno = new javax.swing.JLabel();
        labelE_mailEditarAluno = new javax.swing.JLabel();
        campoNomeDaMaeEditarAluno = new javax.swing.JTextField();
        campoNomeDoPaiEditarAluno = new javax.swing.JTextField();
        campoTelefoneEditarAluno = new javax.swing.JTextField();
        campoEnderecoEditarAluno = new javax.swing.JTextField();
        campoCelularEditarAluno = new javax.swing.JTextField();
        campoEmailEditarAluno = new javax.swing.JTextField();
        comboNomeEditarAluno = new javax.swing.JComboBox();
        botaoSalvarEditarInformacoesAluno = new javax.swing.JButton();
        labelGeneroEditarAluno = new javax.swing.JLabel();
        comboGeneroEditarAluno = new javax.swing.JComboBox();
        labelCidadeEditarAluno = new javax.swing.JLabel();
        campoCidadeEditarAluno = new javax.swing.JTextField();
        dateChooserDataDeNascimentoEditarAluno = new com.toedter.calendar.JDateChooser();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        deleteStudentPanel = new javax.swing.JPanel();
        labelNomeExcluirCadastroAluno = new javax.swing.JLabel();
        comboNomeExcluirCadastroAluno = new javax.swing.JComboBox();
        botaoExcluirExcluirAluno = new javax.swing.JButton();

        setMinimumSize(new java.awt.Dimension(833, 515));

        newStudentPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        labelNomeCompletoCadastrarAluno.setText("Nome Completo");
        newStudentPanel.add(labelNomeCompletoCadastrarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 45, -1, -1));

        labelDataDeNascimentoCadastrarAluno.setText("Data de Nascimento");
        newStudentPanel.add(labelDataDeNascimentoCadastrarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 112, -1, -1));

        labelNomeDoPaiCadastrarAluno.setText("Nome Completo do Pai");
        newStudentPanel.add(labelNomeDoPaiCadastrarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 277, -1, 14));

        labelNomeDaMaeCadastrarAluno.setText("Nome Completo da Mãe");
        newStudentPanel.add(labelNomeDaMaeCadastrarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 243, -1, -1));

        labelEnderecoCadastrarAluno.setText("Endereço");
        newStudentPanel.add(labelEnderecoCadastrarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 177, -1, -1));

        labelTelefoneCadastrarAluno.setText("Telefone");
        newStudentPanel.add(labelTelefoneCadastrarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 309, -1, -1));

        labelCelularCadastrarAluno.setText("Celular");
        newStudentPanel.add(labelCelularCadastrarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 342, -1, -1));

        labelEmailCadastrarAluno.setText("E-mail");
        newStudentPanel.add(labelEmailCadastrarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 376, -1, -1));

        campoNomeCompletoCadastrarAluno.setToolTipText("teste");
        newStudentPanel.add(campoNomeCompletoCadastrarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, 40, 396, -1));
        newStudentPanel.add(campoNomeDaMaeCadastrarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, 238, 396, -1));
        newStudentPanel.add(campoNomeDoPaiCadastrarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, 271, 396, -1));
        newStudentPanel.add(campoTelefoneCadastrarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, 304, 396, -1));
        newStudentPanel.add(campoEnderecoCadastrarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, 172, 396, -1));
        newStudentPanel.add(campoCelularCadastrarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, 337, 396, -1));
        newStudentPanel.add(campoEmailCadastrarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, 371, 396, -1));

        botaoCadastrar.setText("Cadastrar");
        botaoCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCadastrarActionPerformed(evt);
            }
        });
        newStudentPanel.add(botaoCadastrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 417, 90, -1));

        labelGeneroCadastrarAluno.setText("Gênero");
        newStudentPanel.add(labelGeneroCadastrarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 144, -1, -1));

        comboGeneroCadastrarAluno.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Masculino", "Feminino" }));
        comboGeneroCadastrarAluno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboGeneroCadastrarAlunoActionPerformed(evt);
            }
        });
        newStudentPanel.add(comboGeneroCadastrarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, 139, 396, -1));

        labelCidadeCadastrarAluno.setText("Cidade/Estado");
        newStudentPanel.add(labelCidadeCadastrarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 210, -1, -1));
        newStudentPanel.add(campoCidadeCadastrarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, 205, 396, -1));
        newStudentPanel.add(dateChooserDataDeNascimento, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, 106, 396, -1));

        newStudentPanel.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, 73, 396, -1));

        jLabel1.setText("Turma");
        newStudentPanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 79, -1, -1));

        jTabbedPane1.addTab("Cadastrar Aluno", newStudentPanel);

        editStudentPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        labelNomeCompletoEditarAluno.setText("Nome Completo");
        editStudentPanel.add(labelNomeCompletoEditarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 45, -1, -1));

        labelNomeDoPaiEditarAluno.setText("Nome Completo do Pai");
        editStudentPanel.add(labelNomeDoPaiEditarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 277, -1, 14));

        labelNomeDaMaeEditarAluno.setText("Nome Completo da Mãe");
        editStudentPanel.add(labelNomeDaMaeEditarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 243, -1, -1));

        labelEnderecoEditarAluno.setText("Endereço");
        editStudentPanel.add(labelEnderecoEditarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 177, -1, -1));

        labelTelefoneEditarAluno.setText("Telefone");
        editStudentPanel.add(labelTelefoneEditarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 309, -1, -1));

        labelCelularEditarAluno.setText("Celular");
        editStudentPanel.add(labelCelularEditarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 342, -1, -1));

        labelDataDeNascimentoEditarAluno.setText("Data de Nascimento");
        editStudentPanel.add(labelDataDeNascimentoEditarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 112, -1, -1));

        labelE_mailEditarAluno.setText("E-mail");
        editStudentPanel.add(labelE_mailEditarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 376, -1, -1));
        editStudentPanel.add(campoNomeDaMaeEditarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, 238, 396, -1));
        editStudentPanel.add(campoNomeDoPaiEditarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, 271, 396, -1));
        editStudentPanel.add(campoTelefoneEditarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, 304, 396, -1));
        editStudentPanel.add(campoEnderecoEditarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, 172, 396, -1));
        editStudentPanel.add(campoCelularEditarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, 337, 396, -1));
        editStudentPanel.add(campoEmailEditarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, 371, 396, -1));

        comboNomeEditarAluno.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                comboNomeEditarAlunoPopupMenuWillBecomeVisible(evt);
            }
        });
        comboNomeEditarAluno.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboNomeEditarAlunoItemStateChanged(evt);
            }
        });
        editStudentPanel.add(comboNomeEditarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, 40, 396, -1));

        botaoSalvarEditarInformacoesAluno.setText("Salvar");
        botaoSalvarEditarInformacoesAluno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSalvarEditarInformacoesAlunoActionPerformed(evt);
            }
        });
        editStudentPanel.add(botaoSalvarEditarInformacoesAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 416, 90, -1));

        labelGeneroEditarAluno.setText("Gênero");
        editStudentPanel.add(labelGeneroEditarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 144, -1, -1));

        comboGeneroEditarAluno.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Masculino", "Feminino" }));
        editStudentPanel.add(comboGeneroEditarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, 139, 396, -1));

        labelCidadeEditarAluno.setText("Cidade/Estado");
        editStudentPanel.add(labelCidadeEditarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 210, -1, -1));
        editStudentPanel.add(campoCidadeEditarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, 205, 396, -1));

        dateChooserDataDeNascimentoEditarAluno.setPreferredSize(new java.awt.Dimension(396, 27));
        editStudentPanel.add(dateChooserDataDeNascimentoEditarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, 106, -1, -1));

        editStudentPanel.add(jComboBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, 73, 396, -1));

        jLabel2.setText("Turma");
        editStudentPanel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 79, -1, -1));

        jTabbedPane1.addTab("Editar Informações do Aluno", editStudentPanel);

        deleteStudentPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        labelNomeExcluirCadastroAluno.setText("Selecione um Aluno");
        deleteStudentPanel.add(labelNomeExcluirCadastroAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 45, -1, -1));

        comboNomeExcluirCadastroAluno.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                comboNomeExcluirCadastroAlunoPopupMenuWillBecomeVisible(evt);
            }
        });
        deleteStudentPanel.add(comboNomeExcluirCadastroAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 40, 536, -1));

        botaoExcluirExcluirAluno.setText("Excluir");
        botaoExcluirExcluirAluno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoExcluirExcluirAlunoActionPerformed(evt);
            }
        });
        deleteStudentPanel.add(botaoExcluirExcluirAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(666, 80, 90, -1));

        jTabbedPane1.addTab("Excluir Cadastro do Aluno", deleteStudentPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 833, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 515, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

   private void botaoCadastrarActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_botaoCadastrarActionPerformed
   {//GEN-HEADEREND:event_botaoCadastrarActionPerformed

       
   }//GEN-LAST:event_botaoCadastrarActionPerformed

   private void comboNomeEditarAlunoPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt)//GEN-FIRST:event_comboNomeEditarAlunoPopupMenuWillBecomeVisible
   {//GEN-HEADEREND:event_comboNomeEditarAlunoPopupMenuWillBecomeVisible
      Object isNull;
      isNull = comboNomeEditarAluno.getItemAt(0);
      int i = 0;
      
      if(isStudentAddedComboStudent() && isNull == null)
      {
         i = 0;
         comboNomeEditarAluno.addItem("");
         
         if(MainPanel.alunosLidos != null)
         {
            while(i < MainPanel.alunosLidos.size())
            {
               comboNomeEditarAluno.addItem(MainPanel.alunosLidos.get(i).getNome());
               i++;
            }
         }
         
         setStudentAddedComboStudent(false);
         setNumeroDeAlunosAdicionadosComboStudent(0);
      }
      else
      {
         if(isStudentAddedComboStudent() && isNull != null)
         {
            i = (MainPanel.alunosLidos.size() - getNumeroDeAlunosAdicionadosComboStudent());
            
            if(MainPanel.alunosLidos != null)
            {
               while(i < MainPanel.alunosLidos.size())
               {
                  comboNomeEditarAluno.addItem(MainPanel.alunosLidos.get(i).getNome());
                  i++;
               }
            }
            
            setStudentAddedComboStudent(false);
            setNumeroDeAlunosAdicionadosComboStudent(0);
         }
         else
         {
            if(isNull == null)
            {
               i = 0;
               comboNomeEditarAluno.addItem("");
               if(MainPanel.alunosLidos != null)
               {
                  while(i < MainPanel.alunosLidos.size())
                  {
                     comboNomeEditarAluno.addItem(MainPanel.alunosLidos.get(i).getNome());
                     i++;
                  }
               }
            }
         }
      }
   }//GEN-LAST:event_comboNomeEditarAlunoPopupMenuWillBecomeVisible

   private void comboNomeExcluirCadastroAlunoPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt)//GEN-FIRST:event_comboNomeExcluirCadastroAlunoPopupMenuWillBecomeVisible
   {//GEN-HEADEREND:event_comboNomeExcluirCadastroAlunoPopupMenuWillBecomeVisible
      Object isNull;
      isNull = comboNomeExcluirCadastroAluno.getItemAt(0);
      int i = 0;
      
      if(isStudentAddedComboName()&& isNull == null)
      {
         i = 0;
         comboNomeExcluirCadastroAluno.addItem("");
         
         if(MainPanel.alunosLidos != null)
         {
            while(i < MainPanel.alunosLidos.size())
            {
               comboNomeExcluirCadastroAluno.addItem(MainPanel.alunosLidos.get(i).getNome());
               i++;
            }
         }
         
         setStudentAddedComboName(false);
         setNumeroDeAlunosAdicionadosComboName(0);
      }
      else
      {
         if(isStudentAddedComboName() && isNull != null)
         {
            i = (MainPanel.alunosLidos.size() - getNumeroDeAlunosAdicionadosComboName());
            
            if(MainPanel.alunosLidos != null)
            {
               while(i < MainPanel.alunosLidos.size())
               {
                  comboNomeExcluirCadastroAluno.addItem(MainPanel.alunosLidos.get(i).getNome());
                  i++;
               }
            }
            
            setStudentAddedComboName(false);
            setNumeroDeAlunosAdicionadosComboName(0);
         }
         else
         {
            if(isNull == null)
            {
               i = 0;               
               comboNomeExcluirCadastroAluno.addItem("");
               
               if(MainPanel.alunosLidos != null)
               {
                  while(i < MainPanel.alunosLidos.size())
                  {
                     comboNomeExcluirCadastroAluno.addItem(MainPanel.alunosLidos.get(i).getNome());
                     i++;
                  }
               }                
            }
         }
      }
   }//GEN-LAST:event_comboNomeExcluirCadastroAlunoPopupMenuWillBecomeVisible

   private void comboNomeEditarAlunoItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_comboNomeEditarAlunoItemStateChanged
   {//GEN-HEADEREND:event_comboNomeEditarAlunoItemStateChanged
      if (evt.getStateChange() == 1)
      {
         if(evt.getItem().equals(""))
         {
            System.out.println("espaço em branco"); 
            limpaCamposEditarInformacoesAluno();
         }
         else
         {
            int i = 0;
            SimpleDateFormat sd = new SimpleDateFormat("dd/MM/yyyy");
            
            if(MainPanel.alunosLidos != null)
            {
               for(i = 0; i < MainPanel.alunosLidos.size(); i++)
               {
                  if(MainPanel.alunosLidos.get(i).getNome().equals(evt.getItem().toString()))
                  {
                     dateChooserDataDeNascimentoEditarAluno.setDate(MainPanel.alunosLidos.get(i).getDataDeNascimento());
                     comboGeneroEditarAluno.setSelectedItem(MainPanel.alunosLidos.get(i).getGenero());
                     campoEnderecoEditarAluno.setText(MainPanel.alunosLidos.get(i).getEndereco());
                     campoCidadeEditarAluno.setText(MainPanel.alunosLidos.get(i).getCidade());
//                     campoEstadoEditarAluno.setText(MainPanel.alunosLidos.get(i).getEstado());
                     campoNomeDaMaeEditarAluno.setText(MainPanel.alunosLidos.get(i).getNomeDaMae());
                     campoNomeDoPaiEditarAluno.setText(MainPanel.alunosLidos.get(i).getNomeDoPai());
                     campoTelefoneEditarAluno.setText(MainPanel.alunosLidos.get(i).getTelefone());
                     campoCelularEditarAluno.setText(MainPanel.alunosLidos.get(i).getCelular());
                     campoEmailEditarAluno.setText(MainPanel.alunosLidos.get(i).getEmail());
                  }
               }
            }
         }
      }
   }//GEN-LAST:event_comboNomeEditarAlunoItemStateChanged

   private void botaoSalvarEditarInformacoesAlunoActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_botaoSalvarEditarInformacoesAlunoActionPerformed
   {//GEN-HEADEREND:event_botaoSalvarEditarInformacoesAlunoActionPerformed
      String nome = getCampoNomeCompletoEditarAluno();
      java.util.Date dataDeNascimento = getDateChooserDataDeNascimentoEditarAluno();
      String genero = getComboGeneroEditarAluno();
      String endereco = getCampoEnderecoEditarAluno();
      String cidade = getCampoCidadeEditarAluno();
      String estado = getCampoEstadoEditarAluno();
      String nomeDaMae = getCampoNomeDaMaeEditarAluno();
      String nomeDoPai = getCampoNomeDoPaiEditarAluno();
      String telefone = getCampoTelefoneEditarAluno();
      String celular = getCampoCelularEditarAluno();
      String email = getCampoEmailEditarAluno();
      SimpleDateFormat sd = new SimpleDateFormat("dd/MM/yyyy");      
      dsproject.Aluno aluno = null;
      ObjectInputStream in;
      ObjectOutputStream out;
      
      if(nome == null)
      {
         System.err.println("Nome faltando");
      }
      else
      {
         if(dataDeNascimento == null)
         {
            System.err.println("Data de nascimento faltando");
         }
         else
         {
            labelDataDeNascimentoCadastrarAluno.setForeground(Color.black);
            if(genero == null)
            {
               System.err.println("Gênero faltando");
            }
            else
            {
               if(endereco == null)
               {
                  System.err.println("Endereço faltando");
               }
               else
               {
                  if(cidade == null)
                  {
                     System.err.println("Cidade faltando");
                  }
                  else
                  {
                     if(estado == null)
                     {
                        System.err.println("Estado faltando");
                     }
                     else
                     {
                        if(nomeDaMae == null)
                        {
                           System.err.println("Nome da Mãe faltando");
                        }
                        else
                        {
                           if(nomeDoPai == null)
                           {
                              System.err.println("Nome do Pai faltando");
                           }
                           else
                           {
                              java.sql.Date sqlDateOfBirth = new java.sql.Date(dataDeNascimento.getTime());
                              if(MainPanel.alunosLidos != null)
                              {
                                 for(int i = 0; i < MainPanel.alunosLidos.size(); i++)
                                 {
                                    if(MainPanel.alunosLidos.get(i).getNome().equals(comboNomeEditarAluno.getSelectedItem()))
                                    {
                                       MainPanel.alunosLidos.get(i).setNome(nome);
                                       MainPanel.alunosLidos.get(i).setDataDenascimento(dataDeNascimento);
                                       MainPanel.alunosLidos.get(i).setGenero(genero);
                                       MainPanel.alunosLidos.get(i).setEndereco(endereco);
                                       MainPanel.alunosLidos.get(i).setCidade(cidade);
                                       MainPanel.alunosLidos.get(i).setEstado(estado);
                                       MainPanel.alunosLidos.get(i).setNomeDaMae(nomeDaMae);
                                       MainPanel.alunosLidos.get(i).setNomeDoPai(nomeDoPai);
                                       MainPanel.alunosLidos.get(i).setTelefone(telefone);
                                       MainPanel.alunosLidos.get(i).setCelular(celular);
                                       MainPanel.alunosLidos.get(i).setEmail(email);
                                       JOptionPane.showMessageDialog(null, "Aluno editado com sucesso", "Confirmação!", JOptionPane.INFORMATION_MESSAGE);
                                       limpaCamposEditarInformacoesAluno();
                                    }
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            }
         }
      }
   }//GEN-LAST:event_botaoSalvarEditarInformacoesAlunoActionPerformed

   private void botaoExcluirExcluirAlunoActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_botaoExcluirExcluirAlunoActionPerformed
   {//GEN-HEADEREND:event_botaoExcluirExcluirAlunoActionPerformed
      if(MainPanel.alunosLidos != null)
      {
         for(int i = 0; i < MainPanel.alunosLidos.size(); i++)
         {
            if((comboNomeExcluirCadastroAluno.getSelectedItem().equals(MainPanel.alunosLidos.get(i).getNome())))
            {
               MainPanel.alunosLidos.remove(i);
               comboNomeEditarAluno.removeItemAt(comboNomeExcluirCadastroAluno.getSelectedIndex());
               comboNomeExcluirCadastroAluno.removeItemAt(comboNomeExcluirCadastroAluno.getSelectedIndex());
               if(comboNomeEditarAluno.getItemCount() != 0)
                  comboNomeEditarAluno.setSelectedIndex(0);
               comboNomeExcluirCadastroAluno.setSelectedIndex(0);
               JOptionPane.showMessageDialog(null, "Aluno excluído com sucesso", "Confirmação!", JOptionPane.INFORMATION_MESSAGE);
            }
         }
      }
   }//GEN-LAST:event_botaoExcluirExcluirAlunoActionPerformed

    private void comboGeneroCadastrarAlunoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboGeneroCadastrarAlunoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboGeneroCadastrarAlunoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoCadastrar;
    private javax.swing.JButton botaoExcluirExcluirAluno;
    private javax.swing.JButton botaoSalvarEditarInformacoesAluno;
    private static javax.swing.JTextField campoCelularCadastrarAluno;
    private javax.swing.JTextField campoCelularEditarAluno;
    private static javax.swing.JTextField campoCidadeCadastrarAluno;
    private javax.swing.JTextField campoCidadeEditarAluno;
    private static javax.swing.JTextField campoEmailCadastrarAluno;
    private javax.swing.JTextField campoEmailEditarAluno;
    private static javax.swing.JTextField campoEnderecoCadastrarAluno;
    private javax.swing.JTextField campoEnderecoEditarAluno;
    private static javax.swing.JTextField campoNomeCompletoCadastrarAluno;
    private static javax.swing.JTextField campoNomeDaMaeCadastrarAluno;
    private javax.swing.JTextField campoNomeDaMaeEditarAluno;
    private static javax.swing.JTextField campoNomeDoPaiCadastrarAluno;
    private javax.swing.JTextField campoNomeDoPaiEditarAluno;
    private static javax.swing.JTextField campoTelefoneCadastrarAluno;
    private javax.swing.JTextField campoTelefoneEditarAluno;
    private static javax.swing.JComboBox comboGeneroCadastrarAluno;
    private javax.swing.JComboBox comboGeneroEditarAluno;
    private javax.swing.JComboBox comboNomeEditarAluno;
    private static javax.swing.JComboBox comboNomeExcluirCadastroAluno;
    private static com.toedter.calendar.JDateChooser dateChooserDataDeNascimento;
    private com.toedter.calendar.JDateChooser dateChooserDataDeNascimentoEditarAluno;
    private javax.swing.JPanel deleteStudentPanel;
    private javax.swing.JPanel editStudentPanel;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private static javax.swing.JLabel labelCelularCadastrarAluno;
    private javax.swing.JLabel labelCelularEditarAluno;
    private static javax.swing.JLabel labelCidadeCadastrarAluno;
    private javax.swing.JLabel labelCidadeEditarAluno;
    private static javax.swing.JLabel labelDataDeNascimentoCadastrarAluno;
    private javax.swing.JLabel labelDataDeNascimentoEditarAluno;
    private javax.swing.JLabel labelE_mailEditarAluno;
    private static javax.swing.JLabel labelEmailCadastrarAluno;
    private static javax.swing.JLabel labelEnderecoCadastrarAluno;
    private javax.swing.JLabel labelEnderecoEditarAluno;
    private static javax.swing.JLabel labelGeneroCadastrarAluno;
    private javax.swing.JLabel labelGeneroEditarAluno;
    private static javax.swing.JLabel labelNomeCompletoCadastrarAluno;
    private javax.swing.JLabel labelNomeCompletoEditarAluno;
    private static javax.swing.JLabel labelNomeDaMaeCadastrarAluno;
    private javax.swing.JLabel labelNomeDaMaeEditarAluno;
    private static javax.swing.JLabel labelNomeDoPaiCadastrarAluno;
    private javax.swing.JLabel labelNomeDoPaiEditarAluno;
    private javax.swing.JLabel labelNomeExcluirCadastroAluno;
    private static javax.swing.JLabel labelTelefoneCadastrarAluno;
    private javax.swing.JLabel labelTelefoneEditarAluno;
    private javax.swing.JPanel newStudentPanel;
    // End of variables declaration//GEN-END:variables
   private static boolean studentAddedComboStudent;
   private static boolean studentAddedComboName;
   private int numeroDeAlunosAdicionadosComboStudent = 0;
   private int numeroDeAlunosAdicionadosComboName = 0;

   public int getNumeroDeAlunosAdicionadosComboStudent()
   {
      return numeroDeAlunosAdicionadosComboStudent;
   }

   public void setNumeroDeAlunosAdicionadosComboStudent(int numeroDeAlunosAdicionadosComboStudent)
   {
      this.numeroDeAlunosAdicionadosComboStudent = numeroDeAlunosAdicionadosComboStudent;
   }

   public int getNumeroDeAlunosAdicionadosComboName()
   {
      return numeroDeAlunosAdicionadosComboName;
   }

   public void setNumeroDeAlunosAdicionadosComboName(int numeroDeAlunosAdicionadosComboName)
   {
      this.numeroDeAlunosAdicionadosComboName = numeroDeAlunosAdicionadosComboName;
   }
   
   public static boolean isStudentAddedComboStudent()
   {
      return studentAddedComboStudent;
   }
   
   public static void setStudentAddedComboStudent(boolean studentAdded)
   {
      StudentPanel.studentAddedComboStudent = studentAdded;
   }

   public static boolean isStudentAddedComboName()
   {
      return studentAddedComboName;
   }

   public static void setStudentAddedComboName(boolean studentAddedComboName)
   {
      StudentPanel.studentAddedComboName = studentAddedComboName;
   }
   
   public static String getCampoNomeCompleto()
   {
      if(campoNomeCompletoCadastrarAluno.getText().isEmpty())
      {
         labelNomeCompletoCadastrarAluno.setForeground(Color.red);
         //JOptionPane.showMessageDialog(null, "Digite um " + labelNomeCompleto.getText(), "Erro", JOptionPane.ERROR_MESSAGE);
         return null;
      }
      else
      {
         labelNomeCompletoCadastrarAluno.setForeground(Color.black);
         return campoNomeCompletoCadastrarAluno.getText();
      }
   }

   public static Date getCampoDataDeNascimento()
   {
      if(dateChooserDataDeNascimento.getDate() == null)
      {
         labelDataDeNascimentoCadastrarAluno.setForeground(Color.red);
         //JOptionPane.showMessageDialog(null, "Digite uma " + labelDataDeNascimentoCadastrarAluno.getText(), "Erro", JOptionPane.ERROR_MESSAGE);
         return null;
      }
      else
      {
         return dateChooserDataDeNascimento.getDate();
      }
   }

   public static String getComboGenero()
   {
      if(comboGeneroCadastrarAluno.getSelectedIndex() == -1)
      {
         labelGeneroCadastrarAluno.setForeground(Color.red);
         //JOptionPane.showMessageDialog(null, "Escolha um " + labelGeneroCadastrarAluno.getText(), "Erro", JOptionPane.ERROR_MESSAGE);
         return null;
      }
      else
      {
         labelGeneroCadastrarAluno.setForeground(Color.black);
         return comboGeneroCadastrarAluno.getSelectedItem().toString();
      }
   }
   
   public static String getCampoEndereco()
   {
      if(campoEnderecoCadastrarAluno.getText().isEmpty())
      {
         labelEnderecoCadastrarAluno.setForeground(Color.red);
         //JOptionPane.showMessageDialog(null, "Digite um " + labelEnderecoCadastrarAluno.getText(), "Erro", JOptionPane.ERROR_MESSAGE);
         return null;
      }
      else
      {
         labelEnderecoCadastrarAluno.setForeground(Color.black);
         return campoEnderecoCadastrarAluno.getText();
      }
   }
   
   public static String getCampoCidade()
   {
      if(campoCidadeCadastrarAluno.getText().isEmpty())
      {
         labelCidadeCadastrarAluno.setForeground(Color.red);
         //JOptionPane.showMessageDialog(null, "Digite uma " + labelCidadeCadastrarAluno.getText(), "Erro", JOptionPane.ERROR_MESSAGE);
         return null;
      }
      else
      {
         labelCidadeCadastrarAluno.setForeground(Color.black);
         return campoCidadeCadastrarAluno.getText();
      }
   }
   
   public static String getCampoNomeDaMae()
   {
      if(campoNomeDaMaeCadastrarAluno.getText().isEmpty())
      {
         labelNomeDaMaeCadastrarAluno.setForeground(Color.red);
         //JOptionPane.showMessageDialog(null, "Digite um " + labelNomeDaMaeCadastrarAluno.getText(), "Erro", JOptionPane.ERROR_MESSAGE);
         return null;
      }
      else
      {
         labelNomeDaMaeCadastrarAluno.setForeground(Color.black);
         return campoNomeDaMaeCadastrarAluno.getText();
      }
   }
   
   public static String getCampoNomeDoPai()
   {
      if(campoNomeDoPaiCadastrarAluno.getText().isEmpty())
      {
         labelNomeDoPaiCadastrarAluno.setForeground(Color.red);
         //JOptionPane.showMessageDialog(null, "Digite um " + labelNomeDoPaiCadastrarAluno.getText(), "Erro", JOptionPane.ERROR_MESSAGE);
         return null;
      }
      else
      {
         labelNomeDoPaiCadastrarAluno.setForeground(Color.black);
         return campoNomeDoPaiCadastrarAluno.getText();
      }
   }
   
   public static String getFieldTelephone()
   {
      if(campoTelefoneCadastrarAluno.getText().isEmpty())
         return null;
      else
         return campoTelefoneCadastrarAluno.getText();  
   }

   public static String getFieldCellPhone()
   {
      if(campoCelularCadastrarAluno.getText().isEmpty())
         return null;
      else
         return campoCelularCadastrarAluno.getText();
   }

   public static String getFieldEmail()
   {
      if(campoEmailCadastrarAluno.getText().isEmpty())
         return null;
      else
         return campoEmailCadastrarAluno.getText();
   }
   
   public void limpaCamposCadastrarAluno()
   {
      campoNomeCompletoCadastrarAluno.setText("");
      campoEnderecoCadastrarAluno.setText("");
      campoCelularCadastrarAluno.setText("");
      campoCidadeCadastrarAluno.setText("");
      //campoDataDeNascimentoCadastrarAluno.setText("");
      campoEmailCadastrarAluno.setText("");
      campoNomeDoPaiCadastrarAluno.setText("");
      campoNomeDaMaeCadastrarAluno.setText("");
      campoTelefoneCadastrarAluno.setText("");
   }
   
   public void limpaCamposEditarInformacoesAluno()
   {
      comboNomeEditarAluno.setSelectedIndex(0);
      campoCelularEditarAluno.setText("");
      campoCidadeEditarAluno.setText("");
      campoEmailEditarAluno.setText("");
      campoEnderecoEditarAluno.setText("");
//      campoEstadoEditarAluno.setText("");
      campoNomeDaMaeEditarAluno.setText("");
      campoNomeDoPaiEditarAluno.setText("");
      campoTelefoneEditarAluno.setText("");
   }

   private String getCampoNomeCompletoEditarAluno()
   {
      if(comboNomeEditarAluno.getSelectedItem() == "")
      {
         labelNomeCompletoEditarAluno.setForeground(Color.red);
         return null;
      }
      else
      {
         labelNomeCompletoEditarAluno.setForeground(Color.black);
         return this.comboNomeEditarAluno.getSelectedItem().toString();
      }
   }

   private Date getDateChooserDataDeNascimentoEditarAluno()
   {
      if(dateChooserDataDeNascimentoEditarAluno.getDate() == null)
      {
         labelDataDeNascimentoEditarAluno.setForeground(Color.red);
         //JOptionPane.showMessageDialog(null, "Digite uma " + labelDataDeNascimentoCadastrarAluno.getText(), "Erro", JOptionPane.ERROR_MESSAGE);
         return null;
      }
      else
      {
         labelDataDeNascimentoEditarAluno.setForeground(Color.black);
         return dateChooserDataDeNascimentoEditarAluno.getDate();
      }
   }

   private String getComboGeneroEditarAluno()
   {
      if(comboGeneroEditarAluno.getSelectedItem() == null)
      {
         labelGeneroEditarAluno.setForeground(Color.red);
         return null;
      }
      else
      {
         labelGeneroEditarAluno.setForeground(Color.black);
         return comboGeneroEditarAluno.getSelectedItem().toString();
      }
   }

   private String getCampoEnderecoEditarAluno()
   {
      if(campoEnderecoEditarAluno.getText().isEmpty())
      {
         labelEnderecoEditarAluno.setForeground(Color.red);
         return null;
      }
      else
      {
         labelEnderecoEditarAluno.setForeground(Color.black);
         return campoEnderecoEditarAluno.getText();
      }
   }

   private String getCampoCidadeEditarAluno()
   {
      if(campoCidadeEditarAluno.getText().isEmpty())
      {
         labelCidadeEditarAluno.setForeground(Color.red);
         return null;
      }
      else
      {
         labelCidadeEditarAluno.setForeground(Color.black);
         return campoCidadeEditarAluno.getText();
      }
   }

   private String getCampoEstadoEditarAluno()
   {
/*      if(campoEstadoEditarAluno.getText().isEmpty())
      {
         labelEstadoEditarAluno.setForeground(Color.red);
         return null;
      }
      else
      {
         labelEstadoEditarAluno.setForeground(Color.black);
         return campoEstadoEditarAluno.getText();
      }*/
       return null;
   }

   private String getCampoNomeDaMaeEditarAluno()
   {
      if(campoNomeDaMaeEditarAluno.getText().isEmpty())
      {
         labelNomeDaMaeEditarAluno.setForeground(Color.red);
         return null;
      }
      else
      {
         labelNomeDaMaeEditarAluno.setForeground(Color.black);
         return campoNomeDaMaeEditarAluno.getText();
      }
   }

   private String getCampoNomeDoPaiEditarAluno()
   {
      if(campoNomeDoPaiEditarAluno.getText().isEmpty())
      {
         labelNomeDoPaiEditarAluno.setForeground(Color.red);
         return null;
      }
      else
      {
         labelNomeDoPaiEditarAluno.setForeground(Color.black);
         return campoNomeDoPaiEditarAluno.getText();
      }
   }

   private String getCampoTelefoneEditarAluno()
   {
      if(campoTelefoneEditarAluno.getText().isEmpty())
         return null;
      else
         return campoTelefoneEditarAluno.getText();  
   }

   private String getCampoCelularEditarAluno()
   {
      if(campoCelularEditarAluno.getText().isEmpty())
         return null;
      else
         return campoCelularEditarAluno.getText();  
   }

   private String getCampoEmailEditarAluno()
   {
      if(campoEmailEditarAluno.getText().isEmpty())
         return null;
      else
         return campoEmailEditarAluno.getText();
   }
}
