/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ClassPanel.java
 *
 * Created on 14/06/2013, 15:48:46
 */
package Interface;

import dsproject.Turma;
import java.awt.Color;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author GÃ¼nther
 */
public class ClassPanel extends javax.swing.JPanel {

    /** Creates new form ClassPanel */
    public ClassPanel() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents()
   {

      buttonGroup1 = new javax.swing.ButtonGroup();
      jTabbedPane1 = new javax.swing.JTabbedPane();
      listClassesPanel = new javax.swing.JPanel();
      jScrollPane2 = new javax.swing.JScrollPane();
      listaListaDeTurmas = new DefaultListModel();
      listaDeTurmas = new javax.swing.JList(listaListaDeTurmas);
      newClassPanel = new javax.swing.JPanel();
      jLabel2 = new javax.swing.JLabel();
      jSeparator1 = new javax.swing.JSeparator();
      labelAluno = new javax.swing.JLabel();
      comboAluno = new javax.swing.JComboBox();
      botaoAdicionar = new javax.swing.JButton();
      jLabel4 = new javax.swing.JLabel();
      jScrollPane1 = new javax.swing.JScrollPane();
      listaAlunosMatriculados = new DefaultListModel();
      listaAlunosMatriculadosNaTurma = new javax.swing.JList(listaAlunosMatriculados);
      labelTurma = new javax.swing.JLabel();
      campoTurma = new javax.swing.JTextField();
      labelAnoLetivo = new javax.swing.JLabel();
      campoAnoLetivo = new javax.swing.JTextField();
      botaoCadastrar = new javax.swing.JButton();
      botaoRemoverAluno = new javax.swing.JButton();
      editClassPanel = new javax.swing.JPanel();
      labelTurmaEditarTurma = new javax.swing.JLabel();
      comboTurmaEditarTurma = new javax.swing.JComboBox();
      labelAnoLetivoEditarTurma = new javax.swing.JLabel();
      campoAnoLetivoEditarTurma = new javax.swing.JTextField();
      jLabel8 = new javax.swing.JLabel();
      comboAdicionarAluno = new javax.swing.JComboBox();
      botaoRemoverEditarTurma = new javax.swing.JButton();
      botaoAdicionarEditarTurma = new javax.swing.JButton();
      comboRemoverAluno = new javax.swing.JComboBox();
      jLabel9 = new javax.swing.JLabel();
      botaoSalvar = new javax.swing.JButton();
      findClassPanel = new javax.swing.JPanel();
      labelNomeDoAluno = new javax.swing.JLabel();
      comboNomeDoAluno = new javax.swing.JComboBox();
      labelTurmaBuscarTurmaPorAluno = new javax.swing.JLabel();
      returnClassLabel = new javax.swing.JLabel();
      deleteClassPanel = new javax.swing.JPanel();
      labelTurmaRemoverTurma = new javax.swing.JLabel();
      comboTurma = new javax.swing.JComboBox();
      botaoRemover = new javax.swing.JButton();

      setMinimumSize(new java.awt.Dimension(833, 515));
      setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

      listClassesPanel.addComponentListener(new java.awt.event.ComponentAdapter()
      {
         public void componentShown(java.awt.event.ComponentEvent evt)
         {
            listClassesPanelComponentShown(evt);
         }
      });
      listClassesPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

      listaDeTurmas.setBackground(new java.awt.Color(240, 240, 240));
      jScrollPane2.setViewportView(listaDeTurmas);

      listClassesPanel.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(31, 33, 763, 422));

      jTabbedPane1.addTab("Lista de Turmas", listClassesPanel);

      newClassPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

      jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
      jLabel2.setText("Adicionar Alunos");
      newClassPanel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(122, 88, 574, -1));
      newClassPanel.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 66, 807, 10));

      labelAluno.setText("Aluno");
      newClassPanel.add(labelAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(122, 117, -1, -1));

      comboAluno.addPopupMenuListener(new javax.swing.event.PopupMenuListener()
      {
         public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt)
         {
         }
         public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt)
         {
         }
         public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt)
         {
            comboAlunoPopupMenuWillBecomeVisible(evt);
         }
      });
      newClassPanel.add(comboAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(202, 112, 400, -1));

      botaoAdicionar.setText("Adicionar");
      botaoAdicionar.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            botaoAdicionarActionPerformed(evt);
         }
      });
      newClassPanel.add(botaoAdicionar, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 111, -1, -1));

      jLabel4.setText("Alunos matriculados na turma");
      newClassPanel.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(122, 158, -1, -1));

      listaAlunosMatriculadosNaTurma.setBackground(new java.awt.Color(240, 240, 240));
      listaAlunosMatriculadosNaTurma.setForeground(new java.awt.Color(51, 51, 51));
      jScrollPane1.setViewportView(listaAlunosMatriculadosNaTurma);

      newClassPanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(139, 187, 530, 155));

      labelTurma.setText("Turma");
      newClassPanel.add(labelTurma, new org.netbeans.lib.awtextra.AbsoluteConstraints(208, 26, -1, -1));
      newClassPanel.add(campoTurma, new org.netbeans.lib.awtextra.AbsoluteConstraints(265, 21, 110, -1));

      labelAnoLetivo.setText("Ano Letivo");
      newClassPanel.add(labelAnoLetivo, new org.netbeans.lib.awtextra.AbsoluteConstraints(436, 26, -1, -1));

      campoAnoLetivo.addKeyListener(new java.awt.event.KeyAdapter()
      {
         public void keyTyped(java.awt.event.KeyEvent evt)
         {
            campoAnoLetivoKeyTyped(evt);
         }
      });
      newClassPanel.add(campoAnoLetivo, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 21, 110, -1));

      botaoCadastrar.setText("Cadastrar");
      botaoCadastrar.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            botaoCadastrarActionPerformed(evt);
         }
      });
      newClassPanel.add(botaoCadastrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(589, 360, -1, -1));

      botaoRemoverAluno.setText("Remover Aluno");
      botaoRemoverAluno.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            botaoRemoverAlunoActionPerformed(evt);
         }
      });
      newClassPanel.add(botaoRemoverAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(139, 360, -1, -1));

      jTabbedPane1.addTab("Cadastrar Turma", newClassPanel);

      editClassPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

      labelTurmaEditarTurma.setText("Turma");
      editClassPanel.add(labelTurmaEditarTurma, new org.netbeans.lib.awtextra.AbsoluteConstraints(208, 26, -1, -1));

      comboTurmaEditarTurma.addPopupMenuListener(new javax.swing.event.PopupMenuListener()
      {
         public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt)
         {
         }
         public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt)
         {
         }
         public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt)
         {
            comboTurmaEditarTurmaPopupMenuWillBecomeVisible(evt);
         }
      });
      comboTurmaEditarTurma.addItemListener(new java.awt.event.ItemListener()
      {
         public void itemStateChanged(java.awt.event.ItemEvent evt)
         {
            comboTurmaEditarTurmaItemStateChanged(evt);
         }
      });
      editClassPanel.add(comboTurmaEditarTurma, new org.netbeans.lib.awtextra.AbsoluteConstraints(265, 21, 110, -1));

      labelAnoLetivoEditarTurma.setText("Ano Letivo");
      editClassPanel.add(labelAnoLetivoEditarTurma, new org.netbeans.lib.awtextra.AbsoluteConstraints(436, 26, -1, -1));
      editClassPanel.add(campoAnoLetivoEditarTurma, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 21, 110, -1));

      jLabel8.setText("Adicionar Aluno");
      editClassPanel.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 118, -1, -1));

      comboAdicionarAluno.addPopupMenuListener(new javax.swing.event.PopupMenuListener()
      {
         public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt)
         {
         }
         public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt)
         {
         }
         public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt)
         {
            comboAdicionarAlunoPopupMenuWillBecomeVisible(evt);
         }
      });
      editClassPanel.add(comboAdicionarAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(137, 113, 676, -1));

      botaoRemoverEditarTurma.setText("Remover");
      editClassPanel.add(botaoRemoverEditarTurma, new org.netbeans.lib.awtextra.AbsoluteConstraints(728, 267, 85, -1));

      botaoAdicionarEditarTurma.setText("Adicionar");
      botaoAdicionarEditarTurma.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            botaoAdicionarEditarTurmaActionPerformed(evt);
         }
      });
      editClassPanel.add(botaoAdicionarEditarTurma, new org.netbeans.lib.awtextra.AbsoluteConstraints(726, 152, 87, -1));

      editClassPanel.add(comboRemoverAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(137, 228, 676, -1));

      jLabel9.setText(" Remover Aluno");
      editClassPanel.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 233, -1, -1));

      botaoSalvar.setText("Salvar");
      editClassPanel.add(botaoSalvar, new org.netbeans.lib.awtextra.AbsoluteConstraints(728, 448, 85, -1));

      jTabbedPane1.addTab("Editar Turma", editClassPanel);

      findClassPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

      labelNomeDoAluno.setText("Nome do Aluno");
      findClassPanel.add(labelNomeDoAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(77, 43, -1, -1));

      comboNomeDoAluno.addPopupMenuListener(new javax.swing.event.PopupMenuListener()
      {
         public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt)
         {
         }
         public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt)
         {
         }
         public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt)
         {
            comboNomeDoAlunoPopupMenuWillBecomeVisible(evt);
         }
      });
      findClassPanel.add(comboNomeDoAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(201, 38, 500, -1));

      labelTurmaBuscarTurmaPorAluno.setText("Turma");
      findClassPanel.add(labelTurmaBuscarTurmaPorAluno, new org.netbeans.lib.awtextra.AbsoluteConstraints(77, 83, -1, -1));
      findClassPanel.add(returnClassLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(128, 120, 66, -1));

      jTabbedPane1.addTab("Buscar Turma por Aluno", findClassPanel);

      deleteClassPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

      labelTurmaRemoverTurma.setText("Turma");
      deleteClassPanel.add(labelTurmaRemoverTurma, new org.netbeans.lib.awtextra.AbsoluteConstraints(101, 27, -1, -1));

      comboTurma.addPopupMenuListener(new javax.swing.event.PopupMenuListener()
      {
         public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt)
         {
         }
         public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt)
         {
         }
         public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt)
         {
            comboTurmaPopupMenuWillBecomeVisible(evt);
         }
      });
      deleteClassPanel.add(comboTurma, new org.netbeans.lib.awtextra.AbsoluteConstraints(191, 22, 500, -1));

      botaoRemover.setText("Remover");
      deleteClassPanel.add(botaoRemover, new org.netbeans.lib.awtextra.AbsoluteConstraints(605, 67, 86, -1));

      jTabbedPane1.addTab("Remover Turma", deleteClassPanel);

      add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 833, 515));
   }// </editor-fold>//GEN-END:initComponents

    private void botaoAdicionarEditarTurmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAdicionarEditarTurmaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_botaoAdicionarEditarTurmaActionPerformed

   private void comboAlunoPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt)//GEN-FIRST:event_comboAlunoPopupMenuWillBecomeVisible
   {//GEN-HEADEREND:event_comboAlunoPopupMenuWillBecomeVisible
      Object isNull;
      isNull = comboAluno.getItemAt(0);
      int i = 0;
      
      if(isStudentAddedComboAluno() && isNull == null)
      {
         i = 0;
         comboAluno.addItem("");
         
         if(MainPanel.alunosLidos != null)
         {
            while(i < MainPanel.alunosLidos.size())
            {
               if(MainPanel.alunosLidos.get(i).getTurma() == null)
               {
                  comboAluno.addItem(MainPanel.alunosLidos.get(i).getNome());
               }
               i++;
            }
         }
         
         setStudentAddedComboAluno(false);
         setNumeroDeAlunosAdicionadosComboAluno(0);
      }
      else
      {
         if(isStudentAddedComboAluno() && isNull != null)
         {
            i = (MainPanel.alunosLidos.size() - getNumeroDeAlunosAdicionadosComboAluno());

            if(MainPanel.alunosLidos != null)
            {
               while(i < MainPanel.alunosLidos.size())
               {
                  if(MainPanel.alunosLidos.get(i).getTurma() == null)
                  {
                     comboAluno.addItem(MainPanel.alunosLidos.get(i).getNome());
                  }
                  i++;
               }
            }
            
            setStudentAddedComboAluno(false);
            setNumeroDeAlunosAdicionadosComboAluno(0);
         }
         else
         {
            if(isNull == null)
            {
               i = 0;
               comboAluno.addItem("");
               
               if(MainPanel.alunosLidos != null)
               {
                  while(i < MainPanel.alunosLidos.size())
                  {
                     if(MainPanel.alunosLidos.get(i).getTurma() == null)
                     {
                        comboAluno.addItem(MainPanel.alunosLidos.get(i).getNome());
                     }
                     i++;
                  }
               }
            }
         }
      }
   }//GEN-LAST:event_comboAlunoPopupMenuWillBecomeVisible

   private void botaoAdicionarActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_botaoAdicionarActionPerformed
   {//GEN-HEADEREND:event_botaoAdicionarActionPerformed
      if(comboAluno.getSelectedItem() != null && comboAluno.getSelectedItem() != "")
      {
         listaAlunosMatriculados.addElement(comboAluno.getSelectedItem());
      }
   }//GEN-LAST:event_botaoAdicionarActionPerformed

   private void botaoRemoverAlunoActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_botaoRemoverAlunoActionPerformed
   {//GEN-HEADEREND:event_botaoRemoverAlunoActionPerformed
      try
      {
         ArrayList<dsproject.Aluno> alunos = (ArrayList<dsproject.Aluno>) listaAlunosMatriculadosNaTurma.getSelectedValuesList();
         for(int i = 0; i < alunos.size(); i++)
            listaAlunosMatriculados.removeElement(alunos.get(i));
      }
      catch(ClassCastException ex)
      {
         JOptionPane.showMessageDialog(null, "Selecione algum aluno na lista", "Erro", JOptionPane.ERROR_MESSAGE);
         System.err.println(ex);
      }
   }//GEN-LAST:event_botaoRemoverAlunoActionPerformed

   private void botaoCadastrarActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_botaoCadastrarActionPerformed
   {//GEN-HEADEREND:event_botaoCadastrarActionPerformed
      String campoTurma = getCampoTurma();
      String campoAnoLetivo = getCampoAnoLetivo();
      if(campoTurma != null)
      {
         if(campoAnoLetivo != null)
         {
            ArrayList<String> alunosMatriculados = new ArrayList<>();
            ObjectInputStream in;
            ObjectOutputStream out;
            int i;
            int y;
            
            //criar nova turma com os alunos selecionados na lista falta adicionar o professor na turma
            Turma novaTurma = new Turma(campoTurma, Integer.parseInt(campoAnoLetivo), null);
            try
            {
               if(listaAlunosMatriculadosNaTurma.getModel().getSize() != 0)
               {
                  for(i = 0; i < listaAlunosMatriculadosNaTurma.getModel().getSize(); i++)
                  {
                     alunosMatriculados.add(listaAlunosMatriculadosNaTurma.getModel().getElementAt(i).toString());
                     comboAluno.removeItem(listaAlunosMatriculadosNaTurma.getModel().getElementAt(i));
                     comboAdicionarAluno.removeItem(listaAlunosMatriculadosNaTurma.getModel().getElementAt(i));
                  }
                  
                  i = 0;
                  y = 0;
                  while(i < alunosMatriculados.size())
                  {
                     if(MainPanel.alunosLidos.get(y).getNome().equals(alunosMatriculados.get(i)))
                     {
                        MainPanel.alunosLidos.get(y).setTurma(novaTurma);
                        novaTurma.inserirAluno(MainPanel.alunosLidos.get(y));
                        i++;
                        y = 0;
                     }
                     else
                     {
                        y++;
                     }
                  }
                  MainPanel.turmasLidas.add(novaTurma);
                  setTurmaAdicionada(true);
                  setTurmaAdicionadaComboTurmaEditarTurmas(true);
                  setTurmaAdicionadaComboTurma(true);
                  Interface.TestPanel.setTurmaAdicionada(true);
                  TestPanel.setTurmaAdicionadaComboTurma(true);
                  TestPanel.setNumeroDeTurmasAdicionadasComboTurma(TestPanel.getNumeroDeTurmasAdicionadasComboTurma() + 1);
                  Interface.TestPanel.setNumeroDeTurmasAdicionadas(Interface.TestPanel.getNumeroDeTurmasAdicionadas() + 1);
                  setNumeroDeTurmasAdicionadasComboTurma(getNumeroDeTurmasAdicionadasComboTurma() + 1);
                  setNumeroDeTurmasAdicionadas(getNumeroDeTurmasAdicionadas() + 1);
                  setNumeroDeTurmasAdicionadasComboTurmaEditarTurmas(getNumeroDeTurmasAdicionadasComboTurmaEditarTurmas() + 1);
                  JOptionPane.showMessageDialog(null, "Turma salva com sucesso", "ConfirmaÃ§Ã£o!", JOptionPane.INFORMATION_MESSAGE);
                  limpaCamposcadastrarTurma();
               }
               else
               {
                  MainPanel.turmasLidas.add(novaTurma);
                  setTurmaAdicionada(true);
                  setTurmaAdicionadaComboTurmaEditarTurmas(true);
                  setTurmaAdicionadaComboTurma(true);
                  Interface.TestPanel.setTurmaAdicionada(true);
                  Interface.TestPanel.setNumeroDeTurmasAdicionadas(Interface.TestPanel.getNumeroDeTurmasAdicionadas() + 1);
                  setNumeroDeTurmasAdicionadasComboTurma(getNumeroDeTurmasAdicionadasComboTurma() + 1);
                  setNumeroDeTurmasAdicionadas(getNumeroDeTurmasAdicionadas() + 1);
                  setNumeroDeTurmasAdicionadasComboTurmaEditarTurmas(getNumeroDeTurmasAdicionadasComboTurmaEditarTurmas() + 1);
                  JOptionPane.showMessageDialog(null, "Turma salva com sucesso", "ConfirmaÃ§Ã£o!", JOptionPane.INFORMATION_MESSAGE);
                  limpaCamposcadastrarTurma();
               }
            }
            catch(ClassCastException ex)
            {
               
               System.err.println(ex);
            }
         }
         else
         {
            System.err.println("Falta Ano Letivo");
         }
      }
      else
      {
         System.err.println("Falta Nome da Turma");
      }
   }//GEN-LAST:event_botaoCadastrarActionPerformed

   private void campoAnoLetivoKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_campoAnoLetivoKeyTyped
   {//GEN-HEADEREND:event_campoAnoLetivoKeyTyped
      if(!Character.isDigit(evt.getKeyChar()))
      {
         evt.setKeyChar('\0');
      }
      else
      {
         String textoCampo = campoAnoLetivo.getText();
         if(textoCampo.length() > 3)
            evt.setKeyChar('\0');
      }
   }//GEN-LAST:event_campoAnoLetivoKeyTyped

   private void comboAdicionarAlunoPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt)//GEN-FIRST:event_comboAdicionarAlunoPopupMenuWillBecomeVisible
   {//GEN-HEADEREND:event_comboAdicionarAlunoPopupMenuWillBecomeVisible
      Object isNull;
      isNull = comboAdicionarAluno.getItemAt(0);
      int i = 0;
      
      if(isStudentAddedComboAdicionarAluno() && isNull == null)
      {
         i = 0;
         comboAdicionarAluno.addItem("");
         
         if(MainPanel.alunosLidos != null)
         {
            while(i < MainPanel.alunosLidos.size())
            {
               if(MainPanel.alunosLidos.get(i).getTurma() == null)
               {
                  comboAdicionarAluno.addItem(MainPanel.alunosLidos.get(i).getNome());
               }
               i++;
            }
         }
         
         setStudentAddedComboAdicionarAluno(false);
         setNumeroDeAlunosAdicionadosComboAdicionarAluno(0);
      }
      else
      {
         if(isStudentAddedComboAdicionarAluno() && isNull != null)
         {
            i = (MainPanel.alunosLidos.size() - getNumeroDeAlunosAdicionadosComboAdicionarAluno());
            
            if(MainPanel.alunosLidos != null)
            {
               while(i < MainPanel.alunosLidos.size())
               {
                  if(MainPanel.alunosLidos.get(i).getTurma() == null)
                  {
                     comboAdicionarAluno.addItem(MainPanel.alunosLidos.get(i).getNome());
                  }
                  i++;
               }
            }
            
            setStudentAddedComboAdicionarAluno(false);
            setNumeroDeAlunosAdicionadosComboAdicionarAluno(0);
         }
         else
         {
            if(isNull == null)
            {
               i = 0;
               comboAdicionarAluno.addItem("");
               
               if(MainPanel.alunosLidos != null)
               {
                  while(i < MainPanel.alunosLidos.size())
                  {
                     if(MainPanel.alunosLidos.get(i).getTurma() == null)
                     {
                        comboAdicionarAluno.addItem(MainPanel.alunosLidos.get(i).getNome());
                     }
                     i++;
                  }
               }
            }
         }
      }
   }//GEN-LAST:event_comboAdicionarAlunoPopupMenuWillBecomeVisible

   private void comboNomeDoAlunoPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt)//GEN-FIRST:event_comboNomeDoAlunoPopupMenuWillBecomeVisible
   {//GEN-HEADEREND:event_comboNomeDoAlunoPopupMenuWillBecomeVisible
      Object isNull;
      isNull = comboNomeDoAluno.getItemAt(0);
      int i = 0;
      
      if(isStudentAddedComboNomeDoAluno() && isNull == null)
      {
         i = 0;
         comboNomeDoAluno.addItem("");
         
         if(MainPanel.alunosLidos != null)
         {
            while(i < MainPanel.alunosLidos.size())
            {
               comboNomeDoAluno.addItem(MainPanel.alunosLidos.get(i).getNome());
               i++;
            }
         }
         
         setStudentAddedCombonomeDoAluno(false);
         setNumeroDeAlunosAdicionadosComboNomeDoAluno(0);
      }
      else
      {
         if(isStudentAddedComboNomeDoAluno() && isNull != null)
         {
            i = (MainPanel.alunosLidos.size() - getNumeroDeAlunosAdicionadosComboNomeDoAluno());
            
            if(MainPanel.alunosLidos != null)
            {
               while(i < MainPanel.alunosLidos.size())
               {
                  comboNomeDoAluno.addItem(MainPanel.alunosLidos.get(i).getNome());
                  i++;
               }
            }
            
            setStudentAddedCombonomeDoAluno(false);
            setNumeroDeAlunosAdicionadosComboNomeDoAluno(0);
         }
         else
         {
            if(isNull == null)
            {
               i = 0;
               comboNomeDoAluno.addItem("");
               
               if(MainPanel.alunosLidos != null)
               {
                  while(i < MainPanel.alunosLidos.size())
                  {
                     comboNomeDoAluno.addItem(MainPanel.alunosLidos.get(i).getNome());
                     i++;
                  }
               }
            }
         }
      }
   }//GEN-LAST:event_comboNomeDoAlunoPopupMenuWillBecomeVisible

   private void listClassesPanelComponentShown(java.awt.event.ComponentEvent evt)//GEN-FIRST:event_listClassesPanelComponentShown
   {//GEN-HEADEREND:event_listClassesPanelComponentShown
      Object isNull;
      isNull = listaListaDeTurmas.getSize();
      int i = 0;
      
      if(isTurmaAdicionada() && isNull == 0)
      {
         i = 0;
         
         if(MainPanel.turmasLidas != null)
         {
            while(i < MainPanel.turmasLidas.size())
            {
               listaListaDeTurmas.addElement(MainPanel.turmasLidas.get(i).getId());
               i++;
            }
         }
         
         setTurmaAdicionada(false);
         setNumeroDeTurmasAdicionadas(0);
      }
      else
      {
         if(isTurmaAdicionada() && isNull != 0)
         {
            i = (MainPanel.turmasLidas.size() - getNumeroDeTurmasAdicionadas());
            
            if(MainPanel.turmasLidas != null)
            {
               while(i < MainPanel.turmasLidas.size())
               {
                  listaListaDeTurmas.addElement(MainPanel.turmasLidas.get(i).getId());
                  i++;
               }
            }
            
            setTurmaAdicionada(false);
            setNumeroDeTurmasAdicionadas(0);
         }
         else
         {
            if(isNull == 0)
            {
               i = 0;
               
               if(MainPanel.turmasLidas != null)
               {
                  while(i < MainPanel.turmasLidas.size())
                  {
                     listaListaDeTurmas.addElement(MainPanel.turmasLidas.get(i).getId());
                     i++;
                  }
               }
            }
         }
      }
   }//GEN-LAST:event_listClassesPanelComponentShown

   private void comboTurmaEditarTurmaPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt)//GEN-FIRST:event_comboTurmaEditarTurmaPopupMenuWillBecomeVisible
   {//GEN-HEADEREND:event_comboTurmaEditarTurmaPopupMenuWillBecomeVisible
      Object isNull;
      isNull = comboTurmaEditarTurma.getItemAt(0);
      int i = 0;
      
      if(isTurmaAdicionadaComboTurmaEditarTurmas() && isNull == null)
      {
         i = 0;
         comboTurmaEditarTurma.addItem("");
         
         if(MainPanel.turmasLidas != null)
         {
            while(i < MainPanel.turmasLidas.size())
            {
               comboTurmaEditarTurma.addItem(MainPanel.turmasLidas.get(i).getId());
               i++;
            }
         }
         
         setTurmaAdicionadaComboTurmaEditarTurmas(false);
         setNumeroDeTurmasAdicionadasComboTurmaEditarTurmas(0);
      }
      else
      {
         if(isTurmaAdicionadaComboTurmaEditarTurmas()&& isNull != null)
         {
            i = (MainPanel.turmasLidas.size() - getNumeroDeTurmasAdicionadasComboTurmaEditarTurmas());
            
            if(MainPanel.turmasLidas != null)
            {
               while(i < MainPanel.turmasLidas.size())
               {
                  comboTurmaEditarTurma.addItem(MainPanel.turmasLidas.get(i).getId());
                  i++;
               }
            }
            
            setTurmaAdicionadaComboTurmaEditarTurmas(false);
            setNumeroDeTurmasAdicionadasComboTurmaEditarTurmas(0);
         }
         else
         {
            if(isNull == null)
            {
               i = 0;
               comboTurmaEditarTurma.addItem("");
               
               if(MainPanel.turmasLidas != null)
               {
                  while(i < MainPanel.turmasLidas.size())
                  {
                     comboTurmaEditarTurma.addItem(MainPanel.turmasLidas.get(i).getId());
                     i++;
                  }
               }
            }
         }
      }
   }//GEN-LAST:event_comboTurmaEditarTurmaPopupMenuWillBecomeVisible

   private void comboTurmaEditarTurmaItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_comboTurmaEditarTurmaItemStateChanged
   {//GEN-HEADEREND:event_comboTurmaEditarTurmaItemStateChanged
      limpaCamposEditarTurma();
      int i;
      int y;
      Object isNull;
      isNull = comboRemoverAluno.getItemAt(0);
      
      if (evt.getStateChange() == 1)
      {
         if(evt.getItem().equals(""))
         {
            System.out.println("espaÃ§o em branco"); 
         }
         else
         {
            if(isNull == null)
               comboRemoverAluno.addItem("");
            i = 0;
            
            if(MainPanel.turmasLidas != null)
            {
               while(i < MainPanel.turmasLidas.size())
               {
                  if(MainPanel.turmasLidas.get(i).getId().equals(evt.getItem().toString()))
                  {
                     campoAnoLetivoEditarTurma.setText(String.valueOf(MainPanel.turmasLidas.get(i).getAno()));
                     for(y = 0; y < MainPanel.turmasLidas.get(i).buscaTodosAlunos().size(); y++)
                     {
                        comboRemoverAluno.addItem(MainPanel.turmasLidas.get(i).buscaTodosAlunos().get(y).getNome());
                     }
                  }
                  i++;
               }
            }
         }
      }
   }//GEN-LAST:event_comboTurmaEditarTurmaItemStateChanged

   private void comboTurmaPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt)//GEN-FIRST:event_comboTurmaPopupMenuWillBecomeVisible
   {//GEN-HEADEREND:event_comboTurmaPopupMenuWillBecomeVisible
      Object isNull;
      isNull = comboTurma.getItemAt(0);
      int i = 0;
      
      if(isTurmaAdicionadaComboTurma() && isNull == null)
      {
         i = 0;
         comboTurma.addItem("");
         
         if(MainPanel.turmasLidas != null)
         {
            while(i < MainPanel.turmasLidas.size())
            {
               comboTurma.addItem(MainPanel.turmasLidas.get(i).getId());
               i++;
            }
         }
         
         setTurmaAdicionadaComboTurma(false);
         setNumeroDeTurmasAdicionadasComboTurma(0);
      }
      else
      {
         if(isTurmaAdicionadaComboTurma() && isNull != null)
         {
            i = (MainPanel.turmasLidas.size() - getNumeroDeTurmasAdicionadasComboTurma());
            
            if(MainPanel.turmasLidas != null)
            {
               while(i < MainPanel.turmasLidas.size())
               {
                  comboTurma.addItem(MainPanel.turmasLidas.get(i).getId());
                  i++;
               }
            }
            
            setTurmaAdicionadaComboTurma(false);
            setNumeroDeTurmasAdicionadasComboTurma(0);
         }
         else
         {
            if(isNull == null)
            {
               i = 0;
               comboTurma.addItem("");
               
               if(MainPanel.turmasLidas != null)
               {
                  while(i < MainPanel.turmasLidas.size())
                  {
                     comboTurma.addItem(MainPanel.turmasLidas.get(i).getId());
                     i++;
                  }
               }
            }
         }
      }
   }//GEN-LAST:event_comboTurmaPopupMenuWillBecomeVisible

   // Variables declaration - do not modify//GEN-BEGIN:variables
   private static javax.swing.JButton botaoAdicionar;
   private javax.swing.JButton botaoAdicionarEditarTurma;
   private javax.swing.JButton botaoCadastrar;
   private javax.swing.JButton botaoRemover;
   private javax.swing.JButton botaoRemoverAluno;
   private javax.swing.JButton botaoRemoverEditarTurma;
   private javax.swing.JButton botaoSalvar;
   private javax.swing.ButtonGroup buttonGroup1;
   private static javax.swing.JTextField campoAnoLetivo;
   private javax.swing.JTextField campoAnoLetivoEditarTurma;
   private static javax.swing.JTextField campoTurma;
   private static javax.swing.JComboBox comboAdicionarAluno;
   private static javax.swing.JComboBox comboAluno;
   private javax.swing.JComboBox comboNomeDoAluno;
   private static javax.swing.JComboBox comboRemoverAluno;
   private javax.swing.JComboBox comboTurma;
   private javax.swing.JComboBox comboTurmaEditarTurma;
   private javax.swing.JPanel deleteClassPanel;
   private javax.swing.JPanel editClassPanel;
   private javax.swing.JPanel findClassPanel;
   private javax.swing.JLabel jLabel2;
   private javax.swing.JLabel jLabel4;
   private javax.swing.JLabel jLabel8;
   private javax.swing.JLabel jLabel9;
   private javax.swing.JScrollPane jScrollPane1;
   private javax.swing.JScrollPane jScrollPane2;
   private javax.swing.JSeparator jSeparator1;
   private javax.swing.JTabbedPane jTabbedPane1;
   private javax.swing.JLabel labelAluno;
   private static javax.swing.JLabel labelAnoLetivo;
   private javax.swing.JLabel labelAnoLetivoEditarTurma;
   private javax.swing.JLabel labelNomeDoAluno;
   private static javax.swing.JLabel labelTurma;
   private javax.swing.JLabel labelTurmaBuscarTurmaPorAluno;
   private javax.swing.JLabel labelTurmaEditarTurma;
   private javax.swing.JLabel labelTurmaRemoverTurma;
   private javax.swing.JPanel listClassesPanel;
   private static javax.swing.JList listaAlunosMatriculadosNaTurma;
   private javax.swing.JList listaDeTurmas;
   private javax.swing.JPanel newClassPanel;
   private javax.swing.JLabel returnClassLabel;
   // End of variables declaration//GEN-END:variables
   private static DefaultListModel listaAlunosMatriculados;
   private static DefaultListModel listaListaDeTurmas;
   private static boolean alunoAdicionadoComboAluno;
   private static boolean alunoAdicionadoComboNomeDoAluno;
   private static boolean alunoAdicionadoComboAdicionarAluno;
   private static boolean turmaAdicionada;
   private static boolean turmaAdicionadaComboTurmaEditarTurmas;
   private static boolean turmaAdicionadaComboTurma;
   private static int numeroDeTurmasAdicionadasComboTurma = 0;
   private static int numeroDeTurmasAdicionadasComboTurmaEditarTurmas = 0;
   private static int numeroDeTurmasAdicionadas = 0;
   private static int numeroDeAlunosAdicionadosComboAluno = 0;
   private static int numeroDeAlunosAdicionadosComboNomeDoAluno = 0;
   private static int numeroDeAlunosAdicionadosComboAdicionarAluno = 0;

   public static boolean isTurmaAdicionadaComboTurma()
   {
      return turmaAdicionadaComboTurma;
   }

   public static void setTurmaAdicionadaComboTurma(boolean turmaAdicionadaComboTurma)
   {
      ClassPanel.turmaAdicionadaComboTurma = turmaAdicionadaComboTurma;
   }

   public static int getNumeroDeTurmasAdicionadasComboTurma()
   {
      return numeroDeTurmasAdicionadasComboTurma;
   }

   public static void setNumeroDeTurmasAdicionadasComboTurma(int numeroDeTurmasAdicionadasComboTurma)
   {
      ClassPanel.numeroDeTurmasAdicionadasComboTurma = numeroDeTurmasAdicionadasComboTurma;
   }
   
   public static boolean isTurmaAdicionadaComboTurmaEditarTurmas()
   {
      return turmaAdicionadaComboTurmaEditarTurmas;
   }

   public static void setTurmaAdicionadaComboTurmaEditarTurmas(boolean turmaAdicionadaEditarTurmas)
   {
      ClassPanel.turmaAdicionadaComboTurmaEditarTurmas = turmaAdicionadaEditarTurmas;
   }

   public static int getNumeroDeTurmasAdicionadasComboTurmaEditarTurmas()
   {
      return numeroDeTurmasAdicionadasComboTurmaEditarTurmas;
   }

   public static void setNumeroDeTurmasAdicionadasComboTurmaEditarTurmas(int numeroDeTurmasAdicionadasEditarTurmas)
   {
      ClassPanel.numeroDeTurmasAdicionadasComboTurmaEditarTurmas = numeroDeTurmasAdicionadasEditarTurmas;
   }
   
   public static boolean isTurmaAdicionada()
   {
      return turmaAdicionada;
   }

   public static void setTurmaAdicionada(boolean turmaAdicionada)
   {
      ClassPanel.turmaAdicionada = turmaAdicionada;
   }

   public static int getNumeroDeTurmasAdicionadas()
   {
      return numeroDeTurmasAdicionadas;
   }

   public static void setNumeroDeTurmasAdicionadas(int numeroDeTurmasAdicionadas)
   {
      ClassPanel.numeroDeTurmasAdicionadas = numeroDeTurmasAdicionadas;
   }
   
   public static int getNumeroDeAlunosAdicionadosComboAluno()
   {
      return numeroDeAlunosAdicionadosComboAluno;
   }

   public static void setNumeroDeAlunosAdicionadosComboAluno(int numeroDeAlunosAdicionadosComboStudent)
   {
      ClassPanel.numeroDeAlunosAdicionadosComboAluno = numeroDeAlunosAdicionadosComboStudent;
   }

   public static int getNumeroDeAlunosAdicionadosComboNomeDoAluno()
   {
      return numeroDeAlunosAdicionadosComboNomeDoAluno;
   }

   public static void setNumeroDeAlunosAdicionadosComboNomeDoAluno(int numeroDeAlunosAdicionadosComboStudentName)
   {
      ClassPanel.numeroDeAlunosAdicionadosComboNomeDoAluno = numeroDeAlunosAdicionadosComboStudentName;
   }

   public static int getNumeroDeAlunosAdicionadosComboAdicionarAluno()
   {
      return numeroDeAlunosAdicionadosComboAdicionarAluno;
   }

   public static void setNumeroDeAlunosAdicionadosComboAdicionarAluno(int numeroDeAlunosAdicionadosComboAddStudent)
   {
      ClassPanel.numeroDeAlunosAdicionadosComboAdicionarAluno = numeroDeAlunosAdicionadosComboAddStudent;
   }
   
   public static boolean isStudentAddedComboAluno()
   {
      return alunoAdicionadoComboAluno;
   }

   public static boolean isStudentAddedComboNomeDoAluno()
   {
      return alunoAdicionadoComboNomeDoAluno;
   }

   public static boolean isStudentAddedComboAdicionarAluno()
   {
      return alunoAdicionadoComboAdicionarAluno;
   }

   public static void setStudentAddedCombonomeDoAluno(boolean studentAddedComboStudentName)
   {
      ClassPanel.alunoAdicionadoComboNomeDoAluno = studentAddedComboStudentName;
   }

   public static void setStudentAddedComboAdicionarAluno(boolean studentAddedComboAddStudent)
   {
      ClassPanel.alunoAdicionadoComboAdicionarAluno = studentAddedComboAddStudent;
   }
   
   public static void setStudentAddedComboAluno(boolean studentAdded)
   {
      ClassPanel.alunoAdicionadoComboAluno = studentAdded;
   }

   public static String getCampoTurma()
   {
      if(campoTurma.getText().isEmpty())
      {
         labelTurma.setForeground(Color.red);
         //JOptionPane.showMessageDialog(null, "Digite um nome para a " + labelTurma.getText(), "Erro", JOptionPane.ERROR_MESSAGE);
         return null;
      }
      else
      {
         labelTurma.setForeground(Color.black);
         return campoTurma.getText();
      }
   }

   public static String getCampoAnoLetivo()
   {
      if(campoAnoLetivo.getText().isEmpty())
      {
         labelAnoLetivo.setForeground(Color.red);
         //JOptionPane.showMessageDialog(null, "Digite um " + labelAnoLetivo.getText(), "Erro", JOptionPane.ERROR_MESSAGE);
         return null;
      }
      else
      {
         labelAnoLetivo.setForeground(Color.black);
         return campoAnoLetivo.getText();
      }
   }
   
   public void limpaCamposEditarTurma()
   {
      campoAnoLetivoEditarTurma.setText("");
      comboRemoverAluno.removeAllItems();
   }

   private void limpaCamposcadastrarTurma()
   {
      campoTurma.setText("");
      campoAnoLetivo.setText("");
      comboAluno.setSelectedIndex(0);
      listaAlunosMatriculados.removeAllElements();
   }
}
